{
	"id": "00b79df062aa52fb124942f8e56acdf3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"task1/BigDoge.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./interface.sol\";\r\nimport \"./utils.sol\";\r\n\r\n\r\n\r\nabstract contract BaseToken {\r\n    event TokenCreated(\r\n        address indexed owner,\r\n        address indexed token,\r\n        uint256 version\r\n    );\r\n}\r\n\r\n\r\ncontract BigDoge is IBEP20, Ownable, BaseToken {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 public constant VERSION = 1;\r\n\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n    uint256 private _totalSupply;\r\n\r\n    constructor(\r\n        // string memory name_,\r\n        // string memory symbol_,\r\n        // uint8 decimals_,\r\n        // uint256 totalSupply_,\r\n        //address serviceFeeReceiver_\r\n    ) payable {\r\n        _name = \"BigDoge Coin\";\r\n        _symbol = \"BDOGE\";\r\n        _decimals = 18;\r\n        _totalSupply = 100000000*10**18;\r\n        _balances[msg.sender] = _totalSupply;\r\n\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }\r\n\r\n    function getOwner() external view override returns (address){\r\n        return owner();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {BEP20} uses, unless {_setupDecimals} is\r\n     * called.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IBEP20-balanceOf} and {IBEP20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-balanceOf}.\r\n     */\r\n    function balanceOf(address account)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {BEP20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(\r\n                amount,\r\n                \"BEP20: transfer amount exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IBEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IBEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"BEP20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        _balances[sender] = _balances[sender].sub(\r\n            amount,\r\n            \"BEP20: transfer amount exceeds balance\"\r\n        );\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        _balances[account] = _balances[account].sub(\r\n            amount,\r\n            \"BEP20: burn amount exceeds balance\"\r\n        );\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"BEP20: approve from the zero address\");\r\n        require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets {decimals} to a value other than the default one of 18.\r\n     *\r\n     * WARNING: This function should only be called from the constructor. Most\r\n     * applications that interact with token contracts will not expect\r\n     * {decimals} to ever change, and may work incorrectly if it does.\r\n     */\r\n    function _setupDecimals(uint8 decimals_) internal virtual {\r\n        _decimals = decimals_;\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be to transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}"
			},
			"task1/utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./interface.sol\";\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n//\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            codehash := extcodehash(account)\r\n        }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(\r\n            address(this).balance >= amount,\r\n            \"Address: insufficient balance\"\r\n        );\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(\r\n            success,\r\n            \"Address: unable to send value, recipient may have reverted\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data\r\n    ) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return\r\n            functionCallWithValue(\r\n                target,\r\n                data,\r\n                value,\r\n                \"Address: low-level call with value failed\"\r\n            );\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(\r\n            address(this).balance >= value,\r\n            \"Address: insufficient balance for call\"\r\n        );\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 weiValue,\r\n        string memory errorMessage\r\n    ) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(\r\n            data\r\n        );\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//\r\n/**\r\n * @title SafeBEP20\r\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.transfer.selector, to, value)\r\n        );\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IBEP20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.approve.selector, spender, value)\r\n        );\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(\r\n            value\r\n        );\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(\r\n                token.approve.selector,\r\n                spender,\r\n                newAllowance\r\n            )\r\n        );\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(\r\n            value,\r\n            \"SafeBEP20: decreased allowance below zero\"\r\n        );\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(\r\n                token.approve.selector,\r\n                spender,\r\n                newAllowance\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(\r\n            data,\r\n            \"SafeBEP20: low-level call failed\"\r\n        );\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(\r\n                abi.decode(returndata, (bool)),\r\n                \"SafeBEP20: BEP20 operation did not succeed\"\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n// utils合约\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// utils合约\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _setOwner(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _setOwner(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _setOwner(newOwner);\r\n    }\r\n\r\n    function _setOwner(address newOwner) private {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"task1/interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"task1/BigDoge.sol": {
				"BaseToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "version",
									"type": "uint256"
								}
							],
							"name": "TokenCreated",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"TokenCreated\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task1/BigDoge.sol\":\"BaseToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"task1/BigDoge.sol\":{\"keccak256\":\"0x35fa1bc95cd2170b0b0118c59c489985babb37441712a5c3643f7408ff339e2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c3f5b6c9dc20713cbb7a918f027c17e168c5d950294f2228d6d91957638f4a5\",\"dweb:/ipfs/QmUQPNRWwStVvHQZLzqM1SegREgpAscVGygyNG6X9KoWn8\"]},\"task1/interface.sol\":{\"keccak256\":\"0xb9bbf4c02fb5f7a8f6b55978ad1e2288d2dc84612781d16c0531b5cd564167ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90dedec6d25617c8f5f08eadc81fbda788445a346ec4d09204cf6a399ac45a4b\",\"dweb:/ipfs/QmZY8wNn38B9UjJxrAqByuWcy7D311exMNWWpxyP9RZD5Z\"]},\"task1/utils.sol\":{\"keccak256\":\"0xb5cac50c364776987d57d8d23016a14dfe055ea08e1f251ba5245de02c1de56a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efef4f21e4d9c0433394d5814e6a2d8175af6d385abc943c9aabf3c7c3637d80\",\"dweb:/ipfs/QmSW5XHWUDtqGCvkRXwhegmF2sQt5LyEoLKvgXQX7Cm3aD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"BigDoge": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "version",
									"type": "uint256"
								}
							],
							"name": "TokenCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "VERSION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IBEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IBEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IBEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {BEP20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IBEP20-balanceOf} and {IBEP20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IBEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IBEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IBEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"task1/BigDoge.sol\":278:10850  contract BigDoge is IBEP20, Ownable, BaseToken {... */\n  mstore(0x40, 0x80)\n    /* \"task1/utils.sol\":18192:18213  _setOwner(address(0)) */\n  tag_4\n    /* \"task1/utils.sol\":18210:18211  0 */\n  0x00\n    /* \"task1/utils.sol\":18192:18201  _setOwner */\n  shl(0x20, tag_5)\n    /* \"task1/utils.sol\":18192:18213  _setOwner(address(0)) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"task1/BigDoge.sol\":871:893  _name = \"BigDoge Coin\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x426967446f676520436f696e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"task1/BigDoge.sol\":871:876  _name */\n  0x03\n    /* \"task1/BigDoge.sol\":871:893  _name = \"BigDoge Coin\" */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"task1/BigDoge.sol\":904:921  _symbol = \"BDOGE\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x42444f4745000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"task1/BigDoge.sol\":904:911  _symbol */\n  0x04\n    /* \"task1/BigDoge.sol\":904:921  _symbol = \"BDOGE\" */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"task1/BigDoge.sol\":944:946  18 */\n  0x12\n    /* \"task1/BigDoge.sol\":932:941  _decimals */\n  0x05\n  0x00\n    /* \"task1/BigDoge.sol\":932:946  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"task1/BigDoge.sol\":972:988  100000000*10**18 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"task1/BigDoge.sol\":957:969  _totalSupply */\n  0x06\n    /* \"task1/BigDoge.sol\":957:988  _totalSupply = 100000000*10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task1/BigDoge.sol\":1023:1035  _totalSupply */\n  sload(0x06)\n    /* \"task1/BigDoge.sol\":999:1008  _balances */\n  0x01\n    /* \"task1/BigDoge.sol\":999:1020  _balances[msg.sender] */\n  0x00\n    /* \"task1/BigDoge.sol\":1009:1019  msg.sender */\n  caller\n    /* \"task1/BigDoge.sol\":999:1020  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"task1/BigDoge.sol\":999:1035  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task1/BigDoge.sol\":1074:1084  msg.sender */\n  caller\n    /* \"task1/BigDoge.sol\":1053:1099  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"task1/BigDoge.sol\":1070:1071  0 */\n  0x00\n    /* \"task1/BigDoge.sol\":1053:1099  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"task1/BigDoge.sol\":1086:1098  _totalSupply */\n  sload(0x06)\n    /* \"task1/BigDoge.sol\":1053:1099  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"task1/BigDoge.sol\":278:10850  contract BigDoge is IBEP20, Ownable, BaseToken {... */\n  jump(tag_12)\n    /* \"task1/utils.sol\":19439:19612  function _setOwner(address newOwner) private {... */\ntag_5:\n    /* \"task1/utils.sol\":19495:19511  address oldOwner */\n  0x00\n    /* \"task1/utils.sol\":19514:19520  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"task1/utils.sol\":19495:19520  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"task1/utils.sol\":19540:19548  newOwner */\n  dup2\n    /* \"task1/utils.sol\":19531:19537  _owner */\n  0x00\n  dup1\n    /* \"task1/utils.sol\":19531:19548  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"task1/utils.sol\":19595:19603  newOwner */\n  dup2\n    /* \"task1/utils.sol\":19564:19604  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"task1/utils.sol\":19585:19593  oldOwner */\n  dup2\n    /* \"task1/utils.sol\":19564:19604  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"task1/utils.sol\":19484:19612  {... */\n  pop\n    /* \"task1/utils.sol\":19439:19612  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_14:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_15:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_16:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_17:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_40:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_42\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":714:798   */\ntag_41:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_18:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_19:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_20:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_21:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_47\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_20\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1429:1468   */\n  tag_48\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_22:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_23:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_24:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_52\n    /* \"#utility.yul\":1818:1852   */\n  tag_53\n    /* \"#utility.yul\":1827:1851   */\n  tag_54\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_22\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1818:1852   */\n  tag_23\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1800:1853   */\n  tag_22\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_25:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_26:\n    /* \"#utility.yul\":2056:2095   */\n  tag_57\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_24\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2117:2208   */\n  tag_58\n    /* \"#utility.yul\":2166:2207   */\n  tag_59\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_21\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_27:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_28:\n    /* \"#utility.yul\":2377:2409   */\n  tag_62\n  tag_27\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2418:2483   */\n  tag_63\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_29:\n    /* \"#utility.yul\":2555:2675   */\ntag_65:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_68\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_28\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_30:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_71\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_18\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2906:2935   */\n  tag_72\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_19\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_73:\n    /* \"#utility.yul\":3133:3213   */\n  tag_74\n    /* \"#utility.yul\":3189:3211   */\n  tag_75\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_19\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_29\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_70:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_31:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_32:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_78\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_31\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_33:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_80\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_32\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_82\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_14\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_84\n  tag_15\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4038:4094   */\ntag_83:\n    /* \"#utility.yul\":4118:4156   */\n  tag_85\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_17\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4203:4270   */\n  tag_86\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_30\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_88\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_89:\n    /* \"#utility.yul\":5144:5211   */\n  tag_90\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_33\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_87)\n    /* \"#utility.yul\":4365:4983   */\ntag_88:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_91\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_18\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_92:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_92)\ntag_94:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_96\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_32\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_95:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_87:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5352   */\ntag_34:\n    /* \"#utility.yul\":5321:5345   */\n  tag_98\n    /* \"#utility.yul\":5339:5344   */\n  dup2\n    /* \"#utility.yul\":5321:5345   */\n  tag_22\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5316:5319   */\n  dup3\n    /* \"#utility.yul\":5309:5346   */\n  mstore\n    /* \"#utility.yul\":5234:5352   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5358:5580   */\ntag_11:\n    /* \"#utility.yul\":5451:5455   */\n  0x00\n    /* \"#utility.yul\":5489:5491   */\n  0x20\n    /* \"#utility.yul\":5478:5487   */\n  dup3\n    /* \"#utility.yul\":5474:5492   */\n  add\n    /* \"#utility.yul\":5466:5492   */\n  swap1\n  pop\n    /* \"#utility.yul\":5502:5573   */\n  tag_100\n    /* \"#utility.yul\":5570:5571   */\n  0x00\n    /* \"#utility.yul\":5559:5568   */\n  dup4\n    /* \"#utility.yul\":5555:5572   */\n  add\n    /* \"#utility.yul\":5546:5552   */\n  dup5\n    /* \"#utility.yul\":5502:5573   */\n  tag_34\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5358:5580   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"task1/BigDoge.sol\":278:10850  contract BigDoge is IBEP20, Ownable, BaseToken {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"task1/BigDoge.sol\":278:10850  contract BigDoge is IBEP20, Ownable, BaseToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xffa1ad74\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"task1/BigDoge.sol\":1278:1369  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/BigDoge.sol\":3565:3775  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/BigDoge.sol\":2377:2485  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/BigDoge.sol\":4257:4711  function transferFrom(... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/BigDoge.sol\":2221:2312  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/BigDoge.sol\":5120:5420  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/BigDoge.sol\":2548:2725  function balanceOf(address account)... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/utils.sol\":18953:19047  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"task1/BigDoge.sol\":1115:1208  function getOwner() external view override returns (address){... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/utils.sol\":18302:18389  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/BigDoge.sol\":1488:1583  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/BigDoge.sol\":5923:6323  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/BigDoge.sol\":2938:3154  function transfer(address recipient, uint256 amount)... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/BigDoge.sol\":3217:3418  function allowance(address owner, address spender)... */\n    tag_16:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/utils.sol\":19202:19431  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"task1/BigDoge.sol\":367:402  uint256 public constant VERSION = 1 */\n    tag_18:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task1/BigDoge.sol\":1278:1369  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"task1/BigDoge.sol\":1323:1336  string memory */\n      0x60\n        /* \"task1/BigDoge.sol\":1356:1361  _name */\n      0x03\n        /* \"task1/BigDoge.sol\":1349:1361  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":1278:1369  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"task1/BigDoge.sol\":3565:3775  function approve(address spender, uint256 amount)... */\n    tag_29:\n        /* \"task1/BigDoge.sol\":3684:3688  bool */\n      0x00\n        /* \"task1/BigDoge.sol\":3706:3745  _approve(_msgSender(), spender, amount) */\n      tag_93\n        /* \"task1/BigDoge.sol\":3715:3727  _msgSender() */\n      tag_94\n        /* \"task1/BigDoge.sol\":3715:3725  _msgSender */\n      tag_95\n        /* \"task1/BigDoge.sol\":3715:3727  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"task1/BigDoge.sol\":3729:3736  spender */\n      dup5\n        /* \"task1/BigDoge.sol\":3738:3744  amount */\n      dup5\n        /* \"task1/BigDoge.sol\":3706:3714  _approve */\n      tag_96\n        /* \"task1/BigDoge.sol\":3706:3745  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_93:\n        /* \"task1/BigDoge.sol\":3763:3767  true */\n      0x01\n        /* \"task1/BigDoge.sol\":3756:3767  return true */\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":3565:3775  function approve(address spender, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"task1/BigDoge.sol\":2377:2485  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_33:\n        /* \"task1/BigDoge.sol\":2438:2445  uint256 */\n      0x00\n        /* \"task1/BigDoge.sol\":2465:2477  _totalSupply */\n      sload(0x06)\n        /* \"task1/BigDoge.sol\":2458:2477  return _totalSupply */\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":2377:2485  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"task1/BigDoge.sol\":4257:4711  function transferFrom(... */\n    tag_39:\n        /* \"task1/BigDoge.sol\":4397:4401  bool */\n      0x00\n        /* \"task1/BigDoge.sol\":4414:4450  _transfer(sender, recipient, amount) */\n      tag_99\n        /* \"task1/BigDoge.sol\":4424:4430  sender */\n      dup5\n        /* \"task1/BigDoge.sol\":4432:4441  recipient */\n      dup5\n        /* \"task1/BigDoge.sol\":4443:4449  amount */\n      dup5\n        /* \"task1/BigDoge.sol\":4414:4423  _transfer */\n      tag_100\n        /* \"task1/BigDoge.sol\":4414:4450  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_99:\n        /* \"task1/BigDoge.sol\":4461:4681  _approve(... */\n      tag_101\n        /* \"task1/BigDoge.sol\":4484:4490  sender */\n      dup5\n        /* \"task1/BigDoge.sol\":4505:4517  _msgSender() */\n      tag_102\n        /* \"task1/BigDoge.sol\":4505:4515  _msgSender */\n      tag_95\n        /* \"task1/BigDoge.sol\":4505:4517  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"task1/BigDoge.sol\":4532:4670  _allowances[sender][_msgSender()].sub(... */\n      tag_103\n        /* \"task1/BigDoge.sol\":4588:4594  amount */\n      dup6\n        /* \"task1/BigDoge.sol\":4532:4670  _allowances[sender][_msgSender()].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"task1/BigDoge.sol\":4532:4543  _allowances */\n      0x02\n        /* \"task1/BigDoge.sol\":4532:4551  _allowances[sender] */\n      0x00\n        /* \"task1/BigDoge.sol\":4544:4550  sender */\n      dup12\n        /* \"task1/BigDoge.sol\":4532:4551  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task1/BigDoge.sol\":4532:4565  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"task1/BigDoge.sol\":4552:4564  _msgSender() */\n      tag_104\n        /* \"task1/BigDoge.sol\":4552:4562  _msgSender */\n      tag_95\n        /* \"task1/BigDoge.sol\":4552:4564  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"task1/BigDoge.sol\":4532:4565  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task1/BigDoge.sol\":4532:4569  _allowances[sender][_msgSender()].sub */\n      tag_105\n      swap1\n        /* \"task1/BigDoge.sol\":4532:4670  _allowances[sender][_msgSender()].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"task1/BigDoge.sol\":4461:4469  _approve */\n      tag_96\n        /* \"task1/BigDoge.sol\":4461:4681  _approve(... */\n      jump\t// in\n    tag_101:\n        /* \"task1/BigDoge.sol\":4699:4703  true */\n      0x01\n        /* \"task1/BigDoge.sol\":4692:4703  return true */\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":4257:4711  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"task1/BigDoge.sol\":2221:2312  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"task1/BigDoge.sol\":2270:2275  uint8 */\n      0x00\n        /* \"task1/BigDoge.sol\":2295:2304  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"task1/BigDoge.sol\":2288:2304  return _decimals */\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":2221:2312  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"task1/BigDoge.sol\":5120:5420  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_47:\n        /* \"task1/BigDoge.sol\":5235:5239  bool */\n      0x00\n        /* \"task1/BigDoge.sol\":5257:5390  _approve(... */\n      tag_108\n        /* \"task1/BigDoge.sol\":5280:5292  _msgSender() */\n      tag_109\n        /* \"task1/BigDoge.sol\":5280:5290  _msgSender */\n      tag_95\n        /* \"task1/BigDoge.sol\":5280:5292  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"task1/BigDoge.sol\":5307:5314  spender */\n      dup5\n        /* \"task1/BigDoge.sol\":5329:5379  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_110\n        /* \"task1/BigDoge.sol\":5368:5378  addedValue */\n      dup6\n        /* \"task1/BigDoge.sol\":5329:5340  _allowances */\n      0x02\n        /* \"task1/BigDoge.sol\":5329:5354  _allowances[_msgSender()] */\n      0x00\n        /* \"task1/BigDoge.sol\":5341:5353  _msgSender() */\n      tag_111\n        /* \"task1/BigDoge.sol\":5341:5351  _msgSender */\n      tag_95\n        /* \"task1/BigDoge.sol\":5341:5353  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"task1/BigDoge.sol\":5329:5354  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task1/BigDoge.sol\":5329:5363  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"task1/BigDoge.sol\":5355:5362  spender */\n      dup10\n        /* \"task1/BigDoge.sol\":5329:5363  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task1/BigDoge.sol\":5329:5367  _allowances[_msgSender()][spender].add */\n      tag_112\n      swap1\n        /* \"task1/BigDoge.sol\":5329:5379  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"task1/BigDoge.sol\":5257:5265  _approve */\n      tag_96\n        /* \"task1/BigDoge.sol\":5257:5390  _approve(... */\n      jump\t// in\n    tag_108:\n        /* \"task1/BigDoge.sol\":5408:5412  true */\n      0x01\n        /* \"task1/BigDoge.sol\":5401:5412  return true */\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":5120:5420  function increaseAllowance(address spender, uint256 addedValue)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"task1/BigDoge.sol\":2548:2725  function balanceOf(address account)... */\n    tag_52:\n        /* \"task1/BigDoge.sol\":2667:2674  uint256 */\n      0x00\n        /* \"task1/BigDoge.sol\":2699:2708  _balances */\n      0x01\n        /* \"task1/BigDoge.sol\":2699:2717  _balances[account] */\n      0x00\n        /* \"task1/BigDoge.sol\":2709:2716  account */\n      dup4\n        /* \"task1/BigDoge.sol\":2699:2717  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task1/BigDoge.sol\":2692:2717  return _balances[account] */\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":2548:2725  function balanceOf(address account)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"task1/utils.sol\":18953:19047  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"task1/utils.sol\":18533:18545  _msgSender() */\n      tag_115\n        /* \"task1/utils.sol\":18533:18543  _msgSender */\n      tag_95\n        /* \"task1/utils.sol\":18533:18545  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"task1/utils.sol\":18522:18545  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/utils.sol\":18522:18529  owner() */\n      tag_116\n        /* \"task1/utils.sol\":18522:18527  owner */\n      tag_61\n        /* \"task1/utils.sol\":18522:18529  owner() */\n      jump\t// in\n    tag_116:\n        /* \"task1/utils.sol\":18522:18545  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"task1/utils.sol\":18514:18582  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"task1/utils.sol\":19018:19039  _setOwner(address(0)) */\n      tag_121\n        /* \"task1/utils.sol\":19036:19037  0 */\n      0x00\n        /* \"task1/utils.sol\":19018:19027  _setOwner */\n      tag_122\n        /* \"task1/utils.sol\":19018:19039  _setOwner(address(0)) */\n      jump\t// in\n    tag_121:\n        /* \"task1/utils.sol\":18953:19047  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"task1/BigDoge.sol\":1115:1208  function getOwner() external view override returns (address){... */\n    tag_57:\n        /* \"task1/BigDoge.sol\":1167:1174  address */\n      0x00\n        /* \"task1/BigDoge.sol\":1193:1200  owner() */\n      tag_124\n        /* \"task1/BigDoge.sol\":1193:1198  owner */\n      tag_61\n        /* \"task1/BigDoge.sol\":1193:1200  owner() */\n      jump\t// in\n    tag_124:\n        /* \"task1/BigDoge.sol\":1186:1200  return owner() */\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":1115:1208  function getOwner() external view override returns (address){... */\n      swap1\n      jump\t// out\n        /* \"task1/utils.sol\":18302:18389  function owner() public view virtual returns (address) {... */\n    tag_61:\n        /* \"task1/utils.sol\":18348:18355  address */\n      0x00\n        /* \"task1/utils.sol\":18375:18381  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/utils.sol\":18368:18381  return _owner */\n      swap1\n      pop\n        /* \"task1/utils.sol\":18302:18389  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"task1/BigDoge.sol\":1488:1583  function symbol() public view virtual returns (string memory) {... */\n    tag_64:\n        /* \"task1/BigDoge.sol\":1535:1548  string memory */\n      0x60\n        /* \"task1/BigDoge.sol\":1568:1575  _symbol */\n      0x04\n        /* \"task1/BigDoge.sol\":1561:1575  return _symbol */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_87\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_87\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":1488:1583  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"task1/BigDoge.sol\":5923:6323  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_68:\n        /* \"task1/BigDoge.sol\":6043:6047  bool */\n      0x00\n        /* \"task1/BigDoge.sol\":6065:6293  _approve(... */\n      tag_133\n        /* \"task1/BigDoge.sol\":6088:6100  _msgSender() */\n      tag_134\n        /* \"task1/BigDoge.sol\":6088:6098  _msgSender */\n      tag_95\n        /* \"task1/BigDoge.sol\":6088:6100  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"task1/BigDoge.sol\":6115:6122  spender */\n      dup5\n        /* \"task1/BigDoge.sol\":6137:6282  _allowances[_msgSender()][spender].sub(... */\n      tag_135\n        /* \"task1/BigDoge.sol\":6194:6209  subtractedValue */\n      dup6\n        /* \"task1/BigDoge.sol\":6137:6282  _allowances[_msgSender()][spender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"task1/BigDoge.sol\":6137:6148  _allowances */\n      0x02\n        /* \"task1/BigDoge.sol\":6137:6162  _allowances[_msgSender()] */\n      0x00\n        /* \"task1/BigDoge.sol\":6149:6161  _msgSender() */\n      tag_136\n        /* \"task1/BigDoge.sol\":6149:6159  _msgSender */\n      tag_95\n        /* \"task1/BigDoge.sol\":6149:6161  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"task1/BigDoge.sol\":6137:6162  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task1/BigDoge.sol\":6137:6171  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"task1/BigDoge.sol\":6163:6170  spender */\n      dup11\n        /* \"task1/BigDoge.sol\":6137:6171  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task1/BigDoge.sol\":6137:6175  _allowances[_msgSender()][spender].sub */\n      tag_105\n      swap1\n        /* \"task1/BigDoge.sol\":6137:6282  _allowances[_msgSender()][spender].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"task1/BigDoge.sol\":6065:6073  _approve */\n      tag_96\n        /* \"task1/BigDoge.sol\":6065:6293  _approve(... */\n      jump\t// in\n    tag_133:\n        /* \"task1/BigDoge.sol\":6311:6315  true */\n      0x01\n        /* \"task1/BigDoge.sol\":6304:6315  return true */\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":5923:6323  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"task1/BigDoge.sol\":2938:3154  function transfer(address recipient, uint256 amount)... */\n    tag_72:\n        /* \"task1/BigDoge.sol\":3060:3064  bool */\n      0x00\n        /* \"task1/BigDoge.sol\":3082:3124  _transfer(_msgSender(), recipient, amount) */\n      tag_138\n        /* \"task1/BigDoge.sol\":3092:3104  _msgSender() */\n      tag_139\n        /* \"task1/BigDoge.sol\":3092:3102  _msgSender */\n      tag_95\n        /* \"task1/BigDoge.sol\":3092:3104  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"task1/BigDoge.sol\":3106:3115  recipient */\n      dup5\n        /* \"task1/BigDoge.sol\":3117:3123  amount */\n      dup5\n        /* \"task1/BigDoge.sol\":3082:3091  _transfer */\n      tag_100\n        /* \"task1/BigDoge.sol\":3082:3124  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_138:\n        /* \"task1/BigDoge.sol\":3142:3146  true */\n      0x01\n        /* \"task1/BigDoge.sol\":3135:3146  return true */\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":2938:3154  function transfer(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"task1/BigDoge.sol\":3217:3418  function allowance(address owner, address spender)... */\n    tag_77:\n        /* \"task1/BigDoge.sol\":3351:3358  uint256 */\n      0x00\n        /* \"task1/BigDoge.sol\":3383:3394  _allowances */\n      0x02\n        /* \"task1/BigDoge.sol\":3383:3401  _allowances[owner] */\n      0x00\n        /* \"task1/BigDoge.sol\":3395:3400  owner */\n      dup5\n        /* \"task1/BigDoge.sol\":3383:3401  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task1/BigDoge.sol\":3383:3410  _allowances[owner][spender] */\n      0x00\n        /* \"task1/BigDoge.sol\":3402:3409  spender */\n      dup4\n        /* \"task1/BigDoge.sol\":3383:3410  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task1/BigDoge.sol\":3376:3410  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"task1/BigDoge.sol\":3217:3418  function allowance(address owner, address spender)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"task1/utils.sol\":19202:19431  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_81:\n        /* \"task1/utils.sol\":18533:18545  _msgSender() */\n      tag_142\n        /* \"task1/utils.sol\":18533:18543  _msgSender */\n      tag_95\n        /* \"task1/utils.sol\":18533:18545  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"task1/utils.sol\":18522:18545  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/utils.sol\":18522:18529  owner() */\n      tag_143\n        /* \"task1/utils.sol\":18522:18527  owner */\n      tag_61\n        /* \"task1/utils.sol\":18522:18529  owner() */\n      jump\t// in\n    tag_143:\n        /* \"task1/utils.sol\":18522:18545  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"task1/utils.sol\":18514:18582  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_119\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"task1/utils.sol\":19325:19326  0 */\n      0x00\n        /* \"task1/utils.sol\":19305:19327  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/utils.sol\":19305:19313  newOwner */\n      dup2\n        /* \"task1/utils.sol\":19305:19327  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task1/utils.sol\":19283:19393  require(... */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"task1/utils.sol\":19404:19423  _setOwner(newOwner) */\n      tag_150\n        /* \"task1/utils.sol\":19414:19422  newOwner */\n      dup2\n        /* \"task1/utils.sol\":19404:19413  _setOwner */\n      tag_122\n        /* \"task1/utils.sol\":19404:19423  _setOwner(newOwner) */\n      jump\t// in\n    tag_150:\n        /* \"task1/utils.sol\":19202:19431  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"task1/BigDoge.sol\":367:402  uint256 public constant VERSION = 1 */\n    tag_83:\n        /* \"task1/BigDoge.sol\":401:402  1 */\n      0x01\n        /* \"task1/BigDoge.sol\":367:402  uint256 public constant VERSION = 1 */\n      dup2\n      jump\t// out\n        /* \"task1/utils.sol\":17646:17744  function _msgSender() internal view virtual returns (address) {... */\n    tag_95:\n        /* \"task1/utils.sol\":17699:17706  address */\n      0x00\n        /* \"task1/utils.sol\":17726:17736  msg.sender */\n      caller\n        /* \"task1/utils.sol\":17719:17736  return msg.sender */\n      swap1\n      pop\n        /* \"task1/utils.sol\":17646:17744  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"task1/BigDoge.sol\":9309:9689  function _approve(... */\n    tag_96:\n        /* \"task1/BigDoge.sol\":9462:9463  0 */\n      0x00\n        /* \"task1/BigDoge.sol\":9445:9464  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/BigDoge.sol\":9445:9450  owner */\n      dup4\n        /* \"task1/BigDoge.sol\":9445:9464  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task1/BigDoge.sol\":9437:9505  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"task1/BigDoge.sol\":9543:9544  0 */\n      0x00\n        /* \"task1/BigDoge.sol\":9524:9545  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/BigDoge.sol\":9524:9531  spender */\n      dup3\n        /* \"task1/BigDoge.sol\":9524:9545  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task1/BigDoge.sol\":9516:9584  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"task1/BigDoge.sol\":9627:9633  amount */\n      dup1\n        /* \"task1/BigDoge.sol\":9597:9608  _allowances */\n      0x02\n        /* \"task1/BigDoge.sol\":9597:9615  _allowances[owner] */\n      0x00\n        /* \"task1/BigDoge.sol\":9609:9614  owner */\n      dup6\n        /* \"task1/BigDoge.sol\":9597:9615  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task1/BigDoge.sol\":9597:9624  _allowances[owner][spender] */\n      0x00\n        /* \"task1/BigDoge.sol\":9616:9623  spender */\n      dup5\n        /* \"task1/BigDoge.sol\":9597:9624  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task1/BigDoge.sol\":9597:9633  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task1/BigDoge.sol\":9665:9672  spender */\n      dup2\n        /* \"task1/BigDoge.sol\":9649:9681  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/BigDoge.sol\":9658:9663  owner */\n      dup4\n        /* \"task1/BigDoge.sol\":9649:9681  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"task1/BigDoge.sol\":9674:9680  amount */\n      dup4\n        /* \"task1/BigDoge.sol\":9649:9681  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"task1/BigDoge.sol\":9309:9689  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"task1/BigDoge.sol\":6813:7423  function _transfer(... */\n    tag_100:\n        /* \"task1/BigDoge.sol\":6971:6972  0 */\n      0x00\n        /* \"task1/BigDoge.sol\":6953:6973  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/BigDoge.sol\":6953:6959  sender */\n      dup4\n        /* \"task1/BigDoge.sol\":6953:6973  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task1/BigDoge.sol\":6945:7015  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"task1/BigDoge.sol\":7055:7056  0 */\n      0x00\n        /* \"task1/BigDoge.sol\":7034:7057  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/BigDoge.sol\":7034:7043  recipient */\n      dup3\n        /* \"task1/BigDoge.sol\":7034:7057  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task1/BigDoge.sol\":7026:7097  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"task1/BigDoge.sol\":7110:7157  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_167\n        /* \"task1/BigDoge.sol\":7131:7137  sender */\n      dup4\n        /* \"task1/BigDoge.sol\":7139:7148  recipient */\n      dup4\n        /* \"task1/BigDoge.sol\":7150:7156  amount */\n      dup4\n        /* \"task1/BigDoge.sol\":7110:7130  _beforeTokenTransfer */\n      tag_168\n        /* \"task1/BigDoge.sol\":7110:7157  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_167:\n        /* \"task1/BigDoge.sol\":7190:7298  _balances[sender].sub(... */\n      tag_169\n        /* \"task1/BigDoge.sol\":7226:7232  amount */\n      dup2\n        /* \"task1/BigDoge.sol\":7190:7298  _balances[sender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"task1/BigDoge.sol\":7190:7199  _balances */\n      0x01\n        /* \"task1/BigDoge.sol\":7190:7207  _balances[sender] */\n      0x00\n        /* \"task1/BigDoge.sol\":7200:7206  sender */\n      dup8\n        /* \"task1/BigDoge.sol\":7190:7207  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task1/BigDoge.sol\":7190:7211  _balances[sender].sub */\n      tag_105\n      swap1\n        /* \"task1/BigDoge.sol\":7190:7298  _balances[sender].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"task1/BigDoge.sol\":7170:7179  _balances */\n      0x01\n        /* \"task1/BigDoge.sol\":7170:7187  _balances[sender] */\n      0x00\n        /* \"task1/BigDoge.sol\":7180:7186  sender */\n      dup6\n        /* \"task1/BigDoge.sol\":7170:7187  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task1/BigDoge.sol\":7170:7298  _balances[sender] = _balances[sender].sub(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task1/BigDoge.sol\":7332:7364  _balances[recipient].add(amount) */\n      tag_170\n        /* \"task1/BigDoge.sol\":7357:7363  amount */\n      dup2\n        /* \"task1/BigDoge.sol\":7332:7341  _balances */\n      0x01\n        /* \"task1/BigDoge.sol\":7332:7352  _balances[recipient] */\n      0x00\n        /* \"task1/BigDoge.sol\":7342:7351  recipient */\n      dup6\n        /* \"task1/BigDoge.sol\":7332:7352  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task1/BigDoge.sol\":7332:7356  _balances[recipient].add */\n      tag_112\n      swap1\n        /* \"task1/BigDoge.sol\":7332:7364  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"task1/BigDoge.sol\":7309:7318  _balances */\n      0x01\n        /* \"task1/BigDoge.sol\":7309:7329  _balances[recipient] */\n      0x00\n        /* \"task1/BigDoge.sol\":7319:7328  recipient */\n      dup5\n        /* \"task1/BigDoge.sol\":7309:7329  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task1/BigDoge.sol\":7309:7364  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task1/BigDoge.sol\":7397:7406  recipient */\n      dup2\n        /* \"task1/BigDoge.sol\":7380:7415  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/BigDoge.sol\":7389:7395  sender */\n      dup4\n        /* \"task1/BigDoge.sol\":7380:7415  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"task1/BigDoge.sol\":7408:7414  amount */\n      dup4\n        /* \"task1/BigDoge.sol\":7380:7415  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"task1/BigDoge.sol\":6813:7423  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"task1/utils.sol\":4846:5086  function sub(... */\n    tag_105:\n        /* \"task1/utils.sol\":4966:4973  uint256 */\n      0x00\n        /* \"task1/utils.sol\":5024:5025  a */\n      dup4\n        /* \"task1/utils.sol\":5019:5020  b */\n      dup4\n        /* \"task1/utils.sol\":5019:5025  b <= a */\n      gt\n      iszero\n        /* \"task1/utils.sol\":5027:5039  errorMessage */\n      dup3\n        /* \"task1/utils.sol\":5011:5040  require(b <= a, errorMessage) */\n      swap1\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n      pop\n        /* \"task1/utils.sol\":5066:5067  b */\n      dup3\n        /* \"task1/utils.sol\":5062:5063  a */\n      dup5\n        /* \"task1/utils.sol\":5062:5067  a - b */\n      sub\n        /* \"task1/utils.sol\":5055:5067  return a - b */\n      swap1\n      pop\n        /* \"task1/utils.sol\":4846:5086  function sub(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"task1/utils.sol\":2567:2665  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_112:\n        /* \"task1/utils.sol\":2625:2632  uint256 */\n      0x00\n        /* \"task1/utils.sol\":2656:2657  b */\n      dup2\n        /* \"task1/utils.sol\":2652:2653  a */\n      dup4\n        /* \"task1/utils.sol\":2652:2657  a + b */\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"task1/utils.sol\":2645:2657  return a + b */\n      swap1\n      pop\n        /* \"task1/utils.sol\":2567:2665  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"task1/utils.sol\":19439:19612  function _setOwner(address newOwner) private {... */\n    tag_122:\n        /* \"task1/utils.sol\":19495:19511  address oldOwner */\n      0x00\n        /* \"task1/utils.sol\":19514:19520  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/utils.sol\":19495:19520  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"task1/utils.sol\":19540:19548  newOwner */\n      dup2\n        /* \"task1/utils.sol\":19531:19537  _owner */\n      0x00\n      dup1\n        /* \"task1/utils.sol\":19531:19548  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"task1/utils.sol\":19595:19603  newOwner */\n      dup2\n        /* \"task1/utils.sol\":19564:19604  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task1/utils.sol\":19585:19593  oldOwner */\n      dup2\n        /* \"task1/utils.sol\":19564:19604  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"task1/utils.sol\":19484:19612  {... */\n      pop\n        /* \"task1/utils.sol\":19439:19612  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"task1/BigDoge.sol\":10722:10847  function _beforeTokenTransfer(... */\n    tag_168:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_180:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_181:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_182:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_219:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_219)\n    tag_221:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_183:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_184:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_224\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_180\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":818:889   */\n      tag_225\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_181\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_226\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_182\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":988:1017   */\n      tag_227\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_183\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_25:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_229\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_184\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_186:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_188:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_189:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_235\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_188\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_190:\n        /* \"#utility.yul\":1983:2007   */\n      tag_237\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_189\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_238:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_191:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_240\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_190\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_192:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_193:\n        /* \"#utility.yul\":2339:2363   */\n      tag_243\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_192\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_244:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_194:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_246\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_193\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_28:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_249\n      tag_186\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2632:2751   */\n    tag_248:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_250\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_191\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_251\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_194\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_195:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_196:\n        /* \"#utility.yul\":3196:3217   */\n      tag_254\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_195\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_31:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_256\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_196\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_197:\n        /* \"#utility.yul\":3533:3557   */\n      tag_258\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_192\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_35:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_260\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_197\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_38:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_263\n      tag_186\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3908:4027   */\n    tag_262:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_264\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_191\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_265\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_191\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_266\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_194\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_198:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_199:\n        /* \"#utility.yul\":4598:4620   */\n      tag_269\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_198\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_44:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_271\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_199\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_51:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_274\n      tag_186\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4929:5048   */\n    tag_273:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_275\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_191\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5306   */\n    tag_200:\n        /* \"#utility.yul\":5275:5299   */\n      tag_277\n        /* \"#utility.yul\":5293:5298   */\n      dup2\n        /* \"#utility.yul\":5275:5299   */\n      tag_189\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5300   */\n      mstore\n        /* \"#utility.yul\":5188:5306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5534   */\n    tag_59:\n        /* \"#utility.yul\":5405:5409   */\n      0x00\n        /* \"#utility.yul\":5443:5445   */\n      0x20\n        /* \"#utility.yul\":5432:5441   */\n      dup3\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5420:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5527   */\n      tag_279\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5456:5527   */\n      tag_200\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5312:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_76:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_282\n      tag_186\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5633:5752   */\n    tag_281:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_283\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_191\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_284\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_191\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6200   */\n    tag_201:\n        /* \"#utility.yul\":6068:6145   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6058:6146   */\n      mstore\n        /* \"#utility.yul\":6165:6169   */\n      0x22\n        /* \"#utility.yul\":6162:6163   */\n      0x04\n        /* \"#utility.yul\":6155:6170   */\n      mstore\n        /* \"#utility.yul\":6189:6193   */\n      0x24\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6194   */\n      revert\n        /* \"#utility.yul\":6206:6526   */\n    tag_87:\n        /* \"#utility.yul\":6250:6256   */\n      0x00\n        /* \"#utility.yul\":6287:6288   */\n      0x02\n        /* \"#utility.yul\":6281:6285   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      div\n        /* \"#utility.yul\":6267:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      0x01\n        /* \"#utility.yul\":6328:6332   */\n      dup3\n        /* \"#utility.yul\":6324:6336   */\n      and\n        /* \"#utility.yul\":6355:6373   */\n      dup1\n        /* \"#utility.yul\":6345:6426   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":6411:6415   */\n      0x7f\n        /* \"#utility.yul\":6403:6409   */\n      dup3\n        /* \"#utility.yul\":6399:6416   */\n      and\n        /* \"#utility.yul\":6389:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6426   */\n    tag_287:\n        /* \"#utility.yul\":6473:6475   */\n      0x20\n        /* \"#utility.yul\":6465:6471   */\n      dup3\n        /* \"#utility.yul\":6462:6476   */\n      lt\n        /* \"#utility.yul\":6442:6460   */\n      dup2\n        /* \"#utility.yul\":6439:6477   */\n      sub\n        /* \"#utility.yul\":6436:6520   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_289\n      tag_201\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6436:6520   */\n    tag_288:\n        /* \"#utility.yul\":6257:6526   */\n      pop\n        /* \"#utility.yul\":6206:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6714   */\n    tag_202:\n        /* \"#utility.yul\":6672:6706   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6668:6669   */\n      0x00\n        /* \"#utility.yul\":6660:6666   */\n      dup3\n        /* \"#utility.yul\":6656:6670   */\n      add\n        /* \"#utility.yul\":6649:6707   */\n      mstore\n        /* \"#utility.yul\":6532:6714   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6720:7086   */\n    tag_203:\n        /* \"#utility.yul\":6862:6865   */\n      0x00\n        /* \"#utility.yul\":6883:6950   */\n      tag_292\n        /* \"#utility.yul\":6947:6949   */\n      0x20\n        /* \"#utility.yul\":6942:6945   */\n      dup4\n        /* \"#utility.yul\":6883:6950   */\n      tag_181\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":6876:6950   */\n      swap2\n      pop\n        /* \"#utility.yul\":6959:7052   */\n      tag_293\n        /* \"#utility.yul\":7048:7051   */\n      dup3\n        /* \"#utility.yul\":6959:7052   */\n      tag_202\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7077:7079   */\n      0x20\n        /* \"#utility.yul\":7072:7075   */\n      dup3\n        /* \"#utility.yul\":7068:7080   */\n      add\n        /* \"#utility.yul\":7061:7080   */\n      swap1\n      pop\n        /* \"#utility.yul\":6720:7086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7092:7511   */\n    tag_119:\n        /* \"#utility.yul\":7258:7262   */\n      0x00\n        /* \"#utility.yul\":7296:7298   */\n      0x20\n        /* \"#utility.yul\":7285:7294   */\n      dup3\n        /* \"#utility.yul\":7281:7299   */\n      add\n        /* \"#utility.yul\":7273:7299   */\n      swap1\n      pop\n        /* \"#utility.yul\":7345:7354   */\n      dup2\n        /* \"#utility.yul\":7339:7343   */\n      dup2\n        /* \"#utility.yul\":7335:7355   */\n      sub\n        /* \"#utility.yul\":7331:7332   */\n      0x00\n        /* \"#utility.yul\":7320:7329   */\n      dup4\n        /* \"#utility.yul\":7316:7333   */\n      add\n        /* \"#utility.yul\":7309:7356   */\n      mstore\n        /* \"#utility.yul\":7373:7504   */\n      tag_295\n        /* \"#utility.yul\":7499:7503   */\n      dup2\n        /* \"#utility.yul\":7373:7504   */\n      tag_203\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7365:7504   */\n      swap1\n      pop\n        /* \"#utility.yul\":7092:7511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7517:7742   */\n    tag_204:\n        /* \"#utility.yul\":7657:7691   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7653:7654   */\n      0x00\n        /* \"#utility.yul\":7645:7651   */\n      dup3\n        /* \"#utility.yul\":7641:7655   */\n      add\n        /* \"#utility.yul\":7634:7692   */\n      mstore\n        /* \"#utility.yul\":7726:7734   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7721:7723   */\n      0x20\n        /* \"#utility.yul\":7713:7719   */\n      dup3\n        /* \"#utility.yul\":7709:7724   */\n      add\n        /* \"#utility.yul\":7702:7735   */\n      mstore\n        /* \"#utility.yul\":7517:7742   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7748:8114   */\n    tag_205:\n        /* \"#utility.yul\":7890:7893   */\n      0x00\n        /* \"#utility.yul\":7911:7978   */\n      tag_298\n        /* \"#utility.yul\":7975:7977   */\n      0x26\n        /* \"#utility.yul\":7970:7973   */\n      dup4\n        /* \"#utility.yul\":7911:7978   */\n      tag_181\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":7904:7978   */\n      swap2\n      pop\n        /* \"#utility.yul\":7987:8080   */\n      tag_299\n        /* \"#utility.yul\":8076:8079   */\n      dup3\n        /* \"#utility.yul\":7987:8080   */\n      tag_204\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":8105:8107   */\n      0x40\n        /* \"#utility.yul\":8100:8103   */\n      dup3\n        /* \"#utility.yul\":8096:8108   */\n      add\n        /* \"#utility.yul\":8089:8108   */\n      swap1\n      pop\n        /* \"#utility.yul\":7748:8114   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8120:8539   */\n    tag_149:\n        /* \"#utility.yul\":8286:8290   */\n      0x00\n        /* \"#utility.yul\":8324:8326   */\n      0x20\n        /* \"#utility.yul\":8313:8322   */\n      dup3\n        /* \"#utility.yul\":8309:8327   */\n      add\n        /* \"#utility.yul\":8301:8327   */\n      swap1\n      pop\n        /* \"#utility.yul\":8373:8382   */\n      dup2\n        /* \"#utility.yul\":8367:8371   */\n      dup2\n        /* \"#utility.yul\":8363:8383   */\n      sub\n        /* \"#utility.yul\":8359:8360   */\n      0x00\n        /* \"#utility.yul\":8348:8357   */\n      dup4\n        /* \"#utility.yul\":8344:8361   */\n      add\n        /* \"#utility.yul\":8337:8384   */\n      mstore\n        /* \"#utility.yul\":8401:8532   */\n      tag_301\n        /* \"#utility.yul\":8527:8531   */\n      dup2\n        /* \"#utility.yul\":8401:8532   */\n      tag_205\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":8393:8532   */\n      swap1\n      pop\n        /* \"#utility.yul\":8120:8539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8545:8768   */\n    tag_206:\n        /* \"#utility.yul\":8685:8719   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":8681:8682   */\n      0x00\n        /* \"#utility.yul\":8673:8679   */\n      dup3\n        /* \"#utility.yul\":8669:8683   */\n      add\n        /* \"#utility.yul\":8662:8720   */\n      mstore\n        /* \"#utility.yul\":8754:8760   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8749:8751   */\n      0x20\n        /* \"#utility.yul\":8741:8747   */\n      dup3\n        /* \"#utility.yul\":8737:8752   */\n      add\n        /* \"#utility.yul\":8730:8761   */\n      mstore\n        /* \"#utility.yul\":8545:8768   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8774:9140   */\n    tag_207:\n        /* \"#utility.yul\":8916:8919   */\n      0x00\n        /* \"#utility.yul\":8937:9004   */\n      tag_304\n        /* \"#utility.yul\":9001:9003   */\n      0x24\n        /* \"#utility.yul\":8996:8999   */\n      dup4\n        /* \"#utility.yul\":8937:9004   */\n      tag_181\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8930:9004   */\n      swap2\n      pop\n        /* \"#utility.yul\":9013:9106   */\n      tag_305\n        /* \"#utility.yul\":9102:9105   */\n      dup3\n        /* \"#utility.yul\":9013:9106   */\n      tag_206\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9131:9133   */\n      0x40\n        /* \"#utility.yul\":9126:9129   */\n      dup3\n        /* \"#utility.yul\":9122:9134   */\n      add\n        /* \"#utility.yul\":9115:9134   */\n      swap1\n      pop\n        /* \"#utility.yul\":8774:9140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9146:9565   */\n    tag_155:\n        /* \"#utility.yul\":9312:9316   */\n      0x00\n        /* \"#utility.yul\":9350:9352   */\n      0x20\n        /* \"#utility.yul\":9339:9348   */\n      dup3\n        /* \"#utility.yul\":9335:9353   */\n      add\n        /* \"#utility.yul\":9327:9353   */\n      swap1\n      pop\n        /* \"#utility.yul\":9399:9408   */\n      dup2\n        /* \"#utility.yul\":9393:9397   */\n      dup2\n        /* \"#utility.yul\":9389:9409   */\n      sub\n        /* \"#utility.yul\":9385:9386   */\n      0x00\n        /* \"#utility.yul\":9374:9383   */\n      dup4\n        /* \"#utility.yul\":9370:9387   */\n      add\n        /* \"#utility.yul\":9363:9410   */\n      mstore\n        /* \"#utility.yul\":9427:9558   */\n      tag_307\n        /* \"#utility.yul\":9553:9557   */\n      dup2\n        /* \"#utility.yul\":9427:9558   */\n      tag_207\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9419:9558   */\n      swap1\n      pop\n        /* \"#utility.yul\":9146:9565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9571:9792   */\n    tag_208:\n        /* \"#utility.yul\":9711:9745   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9707:9708   */\n      0x00\n        /* \"#utility.yul\":9699:9705   */\n      dup3\n        /* \"#utility.yul\":9695:9709   */\n      add\n        /* \"#utility.yul\":9688:9746   */\n      mstore\n        /* \"#utility.yul\":9780:9784   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9775:9777   */\n      0x20\n        /* \"#utility.yul\":9767:9773   */\n      dup3\n        /* \"#utility.yul\":9763:9778   */\n      add\n        /* \"#utility.yul\":9756:9785   */\n      mstore\n        /* \"#utility.yul\":9571:9792   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9798:10164   */\n    tag_209:\n        /* \"#utility.yul\":9940:9943   */\n      0x00\n        /* \"#utility.yul\":9961:10028   */\n      tag_310\n        /* \"#utility.yul\":10025:10027   */\n      0x22\n        /* \"#utility.yul\":10020:10023   */\n      dup4\n        /* \"#utility.yul\":9961:10028   */\n      tag_181\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":9954:10028   */\n      swap2\n      pop\n        /* \"#utility.yul\":10037:10130   */\n      tag_311\n        /* \"#utility.yul\":10126:10129   */\n      dup3\n        /* \"#utility.yul\":10037:10130   */\n      tag_208\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10155:10157   */\n      0x40\n        /* \"#utility.yul\":10150:10153   */\n      dup3\n        /* \"#utility.yul\":10146:10158   */\n      add\n        /* \"#utility.yul\":10139:10158   */\n      swap1\n      pop\n        /* \"#utility.yul\":9798:10164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10170:10589   */\n    tag_158:\n        /* \"#utility.yul\":10336:10340   */\n      0x00\n        /* \"#utility.yul\":10374:10376   */\n      0x20\n        /* \"#utility.yul\":10363:10372   */\n      dup3\n        /* \"#utility.yul\":10359:10377   */\n      add\n        /* \"#utility.yul\":10351:10377   */\n      swap1\n      pop\n        /* \"#utility.yul\":10423:10432   */\n      dup2\n        /* \"#utility.yul\":10417:10421   */\n      dup2\n        /* \"#utility.yul\":10413:10433   */\n      sub\n        /* \"#utility.yul\":10409:10410   */\n      0x00\n        /* \"#utility.yul\":10398:10407   */\n      dup4\n        /* \"#utility.yul\":10394:10411   */\n      add\n        /* \"#utility.yul\":10387:10434   */\n      mstore\n        /* \"#utility.yul\":10451:10582   */\n      tag_313\n        /* \"#utility.yul\":10577:10581   */\n      dup2\n        /* \"#utility.yul\":10451:10582   */\n      tag_209\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":10443:10582   */\n      swap1\n      pop\n        /* \"#utility.yul\":10170:10589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10595:10819   */\n    tag_210:\n        /* \"#utility.yul\":10735:10769   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10731:10732   */\n      0x00\n        /* \"#utility.yul\":10723:10729   */\n      dup3\n        /* \"#utility.yul\":10719:10733   */\n      add\n        /* \"#utility.yul\":10712:10770   */\n      mstore\n        /* \"#utility.yul\":10804:10811   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10799:10801   */\n      0x20\n        /* \"#utility.yul\":10791:10797   */\n      dup3\n        /* \"#utility.yul\":10787:10802   */\n      add\n        /* \"#utility.yul\":10780:10812   */\n      mstore\n        /* \"#utility.yul\":10595:10819   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10825:11191   */\n    tag_211:\n        /* \"#utility.yul\":10967:10970   */\n      0x00\n        /* \"#utility.yul\":10988:11055   */\n      tag_316\n        /* \"#utility.yul\":11052:11054   */\n      0x25\n        /* \"#utility.yul\":11047:11050   */\n      dup4\n        /* \"#utility.yul\":10988:11055   */\n      tag_181\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":10981:11055   */\n      swap2\n      pop\n        /* \"#utility.yul\":11064:11157   */\n      tag_317\n        /* \"#utility.yul\":11153:11156   */\n      dup3\n        /* \"#utility.yul\":11064:11157   */\n      tag_210\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":11182:11184   */\n      0x40\n        /* \"#utility.yul\":11177:11180   */\n      dup3\n        /* \"#utility.yul\":11173:11185   */\n      add\n        /* \"#utility.yul\":11166:11185   */\n      swap1\n      pop\n        /* \"#utility.yul\":10825:11191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11197:11616   */\n    tag_163:\n        /* \"#utility.yul\":11363:11367   */\n      0x00\n        /* \"#utility.yul\":11401:11403   */\n      0x20\n        /* \"#utility.yul\":11390:11399   */\n      dup3\n        /* \"#utility.yul\":11386:11404   */\n      add\n        /* \"#utility.yul\":11378:11404   */\n      swap1\n      pop\n        /* \"#utility.yul\":11450:11459   */\n      dup2\n        /* \"#utility.yul\":11444:11448   */\n      dup2\n        /* \"#utility.yul\":11440:11460   */\n      sub\n        /* \"#utility.yul\":11436:11437   */\n      0x00\n        /* \"#utility.yul\":11425:11434   */\n      dup4\n        /* \"#utility.yul\":11421:11438   */\n      add\n        /* \"#utility.yul\":11414:11461   */\n      mstore\n        /* \"#utility.yul\":11478:11609   */\n      tag_319\n        /* \"#utility.yul\":11604:11608   */\n      dup2\n        /* \"#utility.yul\":11478:11609   */\n      tag_211\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11470:11609   */\n      swap1\n      pop\n        /* \"#utility.yul\":11197:11616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11622:11844   */\n    tag_212:\n        /* \"#utility.yul\":11762:11796   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11758:11759   */\n      0x00\n        /* \"#utility.yul\":11750:11756   */\n      dup3\n        /* \"#utility.yul\":11746:11760   */\n      add\n        /* \"#utility.yul\":11739:11797   */\n      mstore\n        /* \"#utility.yul\":11831:11836   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11826:11828   */\n      0x20\n        /* \"#utility.yul\":11818:11824   */\n      dup3\n        /* \"#utility.yul\":11814:11829   */\n      add\n        /* \"#utility.yul\":11807:11837   */\n      mstore\n        /* \"#utility.yul\":11622:11844   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11850:12216   */\n    tag_213:\n        /* \"#utility.yul\":11992:11995   */\n      0x00\n        /* \"#utility.yul\":12013:12080   */\n      tag_322\n        /* \"#utility.yul\":12077:12079   */\n      0x23\n        /* \"#utility.yul\":12072:12075   */\n      dup4\n        /* \"#utility.yul\":12013:12080   */\n      tag_181\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12006:12080   */\n      swap2\n      pop\n        /* \"#utility.yul\":12089:12182   */\n      tag_323\n        /* \"#utility.yul\":12178:12181   */\n      dup3\n        /* \"#utility.yul\":12089:12182   */\n      tag_212\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":12207:12209   */\n      0x40\n        /* \"#utility.yul\":12202:12205   */\n      dup3\n        /* \"#utility.yul\":12198:12210   */\n      add\n        /* \"#utility.yul\":12191:12210   */\n      swap1\n      pop\n        /* \"#utility.yul\":11850:12216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12222:12641   */\n    tag_166:\n        /* \"#utility.yul\":12388:12392   */\n      0x00\n        /* \"#utility.yul\":12426:12428   */\n      0x20\n        /* \"#utility.yul\":12415:12424   */\n      dup3\n        /* \"#utility.yul\":12411:12429   */\n      add\n        /* \"#utility.yul\":12403:12429   */\n      swap1\n      pop\n        /* \"#utility.yul\":12475:12484   */\n      dup2\n        /* \"#utility.yul\":12469:12473   */\n      dup2\n        /* \"#utility.yul\":12465:12485   */\n      sub\n        /* \"#utility.yul\":12461:12462   */\n      0x00\n        /* \"#utility.yul\":12450:12459   */\n      dup4\n        /* \"#utility.yul\":12446:12463   */\n      add\n        /* \"#utility.yul\":12439:12486   */\n      mstore\n        /* \"#utility.yul\":12503:12634   */\n      tag_325\n        /* \"#utility.yul\":12629:12633   */\n      dup2\n        /* \"#utility.yul\":12503:12634   */\n      tag_213\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":12495:12634   */\n      swap1\n      pop\n        /* \"#utility.yul\":12222:12641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12647:12827   */\n    tag_214:\n        /* \"#utility.yul\":12695:12772   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12692:12693   */\n      0x00\n        /* \"#utility.yul\":12685:12773   */\n      mstore\n        /* \"#utility.yul\":12792:12796   */\n      0x11\n        /* \"#utility.yul\":12789:12790   */\n      0x04\n        /* \"#utility.yul\":12782:12797   */\n      mstore\n        /* \"#utility.yul\":12816:12820   */\n      0x24\n        /* \"#utility.yul\":12813:12814   */\n      0x00\n        /* \"#utility.yul\":12806:12821   */\n      revert\n        /* \"#utility.yul\":12833:13024   */\n    tag_177:\n        /* \"#utility.yul\":12873:12876   */\n      0x00\n        /* \"#utility.yul\":12892:12912   */\n      tag_328\n        /* \"#utility.yul\":12910:12911   */\n      dup3\n        /* \"#utility.yul\":12892:12912   */\n      tag_192\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":12887:12912   */\n      swap2\n      pop\n        /* \"#utility.yul\":12926:12946   */\n      tag_329\n        /* \"#utility.yul\":12944:12945   */\n      dup4\n        /* \"#utility.yul\":12926:12946   */\n      tag_192\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":12921:12946   */\n      swap3\n      pop\n        /* \"#utility.yul\":12969:12970   */\n      dup3\n        /* \"#utility.yul\":12966:12967   */\n      dup3\n        /* \"#utility.yul\":12962:12971   */\n      add\n        /* \"#utility.yul\":12955:12971   */\n      swap1\n      pop\n        /* \"#utility.yul\":12990:12993   */\n      dup1\n        /* \"#utility.yul\":12987:12988   */\n      dup3\n        /* \"#utility.yul\":12984:12994   */\n      gt\n        /* \"#utility.yul\":12981:13017   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":12997:13015   */\n      tag_331\n      tag_214\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":12981:13017   */\n    tag_330:\n        /* \"#utility.yul\":12833:13024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212206a1f2785c4369e95240b622b62526c4371bc471c1aa5a977871a980036d542b064736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1414": {
									"entryPoint": null,
									"id": 1414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_83": {
									"entryPoint": null,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setOwner_1493": {
									"entryPoint": 392,
									"id": 1493,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5583:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:3",
														"type": ""
													}
												],
												"src": "7:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:3"
															},
															"nodeType": "YulIf",
															"src": "623:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:3"
															},
															"nodeType": "YulIf",
															"src": "714:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:3",
														"type": ""
													}
												],
												"src": "484:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:3",
														"type": ""
													}
												],
												"src": "810:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:3"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:3",
														"type": ""
													}
												],
												"src": "957:93:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:3"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:3",
														"type": ""
													}
												],
												"src": "1056:107:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:3",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:3"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:3"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:3"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:3"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:3"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:3"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:3",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:3",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:3",
														"type": ""
													}
												],
												"src": "1169:393:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:3",
														"type": ""
													}
												],
												"src": "1568:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:3",
														"type": ""
													}
												],
												"src": "1651:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:3",
														"type": ""
													}
												],
												"src": "1717:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:3"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:3",
														"type": ""
													}
												],
												"src": "1865:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:3",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:3"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:3"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:3"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:3"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:3",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:3",
														"type": ""
													}
												],
												"src": "1946:269:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:3",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:3"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:3",
														"type": ""
													}
												],
												"src": "2221:73:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:3"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:3"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:3"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:3"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:3",
														"type": ""
													}
												],
												"src": "2300:189:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:3"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:3",
																"statements": []
															},
															"src": "2555:120:3"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:3",
														"type": ""
													}
												],
												"src": "2495:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:3"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:3"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:3"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:3"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:3",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:3"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:3"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:3"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:3"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:3"
															},
															"nodeType": "YulIf",
															"src": "2777:446:3"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:3",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:3",
														"type": ""
													}
												],
												"src": "2687:543:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:3"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:3",
														"type": ""
													}
												],
												"src": "3236:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:3",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:3"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:3"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:3"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:3"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:3",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:3",
														"type": ""
													}
												],
												"src": "3359:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:3"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:3"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:3",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:3"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:3"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:3"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:3",
														"type": ""
													}
												],
												"src": "3533:295:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:3",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:3"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:3"
															},
															"nodeType": "YulIf",
															"src": "4038:56:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:3"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:3"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:3"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:3"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:3"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:3"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:3",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:3"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:3",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:3"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:3"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:3"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:3"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:3"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:3"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:3"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:3"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:3",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:3"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:3"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:3"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:3",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:3"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:3"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:3",
																					"statements": []
																				},
																				"src": "4524:208:3"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:3",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:3"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:3",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:3"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:3"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:3",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:3"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:3"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:3"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:3",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:3"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:3"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:3"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:3"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:3",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:3"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:3"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:3",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:3",
														"type": ""
													}
												],
												"src": "3833:1395:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5299:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5316:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5339:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5321:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5321:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5309:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5287:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5294:3:3",
														"type": ""
													}
												],
												"src": "5234:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5456:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5466:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5489:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5466:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5546:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5559:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5570:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5555:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5555:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5502:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5502:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5428:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5440:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5451:4:3",
														"type": ""
													}
												],
												"src": "5358:222:3"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526200001660006200018860201b60201c565b6040518060400160405280600c81526020017f426967446f676520436f696e0000000000000000000000000000000000000000815250600390816200005c9190620004c6565b506040518060400160405280600581526020017f42444f474500000000000000000000000000000000000000000000000000000081525060049081620000a39190620004c6565b506012600560006101000a81548160ff021916908360ff1602179055506a52b7d2dcc80cd2e4000000600681905550600654600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6006546040516200017a9190620005be565b60405180910390a3620005db565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200024c565b67ffffffffffffffff811115620004ed57620004ec62000257565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b620005b88162000372565b82525050565b6000602082019050620005d56000830184620005ad565b92915050565b61170d80620005eb6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a9059cbb11610066578063a9059cbb146102b3578063dd62ed3e146102e3578063f2fde38b14610313578063ffa1ad741461032f57610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a457c2d71461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61034d565b60405161011a9190610fdf565b60405180910390f35b61013d6004803603810190610138919061109a565b6103df565b60405161014a91906110f5565b60405180910390f35b61015b6103fd565b604051610168919061111f565b60405180910390f35b61018b6004803603810190610186919061113a565b610407565b60405161019891906110f5565b60405180910390f35b6101a96104e0565b6040516101b691906111a9565b60405180910390f35b6101d960048036038101906101d4919061109a565b6104f7565b6040516101e691906110f5565b60405180910390f35b610209600480360381019061020491906111c4565b6105aa565b604051610216919061111f565b60405180910390f35b6102276105f3565b005b61023161067b565b60405161023e9190611200565b60405180910390f35b61024f61068a565b60405161025c9190611200565b60405180910390f35b61026d6106b3565b60405161027a9190610fdf565b60405180910390f35b61029d6004803603810190610298919061109a565b610745565b6040516102aa91906110f5565b60405180910390f35b6102cd60048036038101906102c8919061109a565b610812565b6040516102da91906110f5565b60405180910390f35b6102fd60048036038101906102f8919061121b565b610830565b60405161030a919061111f565b60405180910390f35b61032d600480360381019061032891906111c4565b6108b7565b005b6103376109ae565b604051610344919061111f565b60405180910390f35b60606003805461035c9061128a565b80601f01602080910402602001604051908101604052809291908181526020018280546103889061128a565b80156103d55780601f106103aa576101008083540402835291602001916103d5565b820191906000526020600020905b8154815290600101906020018083116103b857829003601f168201915b5050505050905090565b60006103f36103ec6109b3565b84846109bb565b6001905092915050565b6000600654905090565b6000610414848484610b84565b6104d5846104206109b3565b6104d08560405180606001604052806028815260200161166560289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104866109b3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1b9092919063ffffffff16565b6109bb565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006105a06105046109b3565b8461059b85600260006105156109b3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e7090919063ffffffff16565b6109bb565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105fb6109b3565b73ffffffffffffffffffffffffffffffffffffffff1661061961068a565b73ffffffffffffffffffffffffffffffffffffffff161461066f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066690611307565b60405180910390fd5b6106796000610e86565b565b600061068561068a565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106c29061128a565b80601f01602080910402602001604051908101604052809291908181526020018280546106ee9061128a565b801561073b5780601f106107105761010080835404028352916020019161073b565b820191906000526020600020905b81548152906001019060200180831161071e57829003601f168201915b5050505050905090565b60006108086107526109b3565b84610803856040518060600160405280602581526020016116b3602591396002600061077c6109b3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1b9092919063ffffffff16565b6109bb565b6001905092915050565b600061082661081f6109b3565b8484610b84565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6108bf6109b3565b73ffffffffffffffffffffffffffffffffffffffff166108dd61068a565b73ffffffffffffffffffffffffffffffffffffffff1614610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90611307565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099990611399565b60405180910390fd5b6109ab81610e86565b50565b600181565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a219061142b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a90906114bd565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b77919061111f565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea9061154f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c59906115e1565b60405180910390fd5b610c6d838383610f4a565b610cd98160405180606001604052806026815260200161168d60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1b9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d6e81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e7090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e0e919061111f565b60405180910390a3505050565b6000838311158290610e63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5a9190610fdf565b60405180910390fd5b5082840390509392505050565b60008183610e7e9190611630565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f89578082015181840152602081019050610f6e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fb182610f4f565b610fbb8185610f5a565b9350610fcb818560208601610f6b565b610fd481610f95565b840191505092915050565b60006020820190508181036000830152610ff98184610fa6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103182611006565b9050919050565b61104181611026565b811461104c57600080fd5b50565b60008135905061105e81611038565b92915050565b6000819050919050565b61107781611064565b811461108257600080fd5b50565b6000813590506110948161106e565b92915050565b600080604083850312156110b1576110b0611001565b5b60006110bf8582860161104f565b92505060206110d085828601611085565b9150509250929050565b60008115159050919050565b6110ef816110da565b82525050565b600060208201905061110a60008301846110e6565b92915050565b61111981611064565b82525050565b60006020820190506111346000830184611110565b92915050565b60008060006060848603121561115357611152611001565b5b60006111618682870161104f565b93505060206111728682870161104f565b925050604061118386828701611085565b9150509250925092565b600060ff82169050919050565b6111a38161118d565b82525050565b60006020820190506111be600083018461119a565b92915050565b6000602082840312156111da576111d9611001565b5b60006111e88482850161104f565b91505092915050565b6111fa81611026565b82525050565b600060208201905061121560008301846111f1565b92915050565b6000806040838503121561123257611231611001565b5b60006112408582860161104f565b92505060206112518582860161104f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112a257607f821691505b6020821081036112b5576112b461125b565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112f1602083610f5a565b91506112fc826112bb565b602082019050919050565b60006020820190508181036000830152611320816112e4565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611383602683610f5a565b915061138e82611327565b604082019050919050565b600060208201905081810360008301526113b281611376565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611415602483610f5a565b9150611420826113b9565b604082019050919050565b6000602082019050818103600083015261144481611408565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114a7602283610f5a565b91506114b28261144b565b604082019050919050565b600060208201905081810360008301526114d68161149a565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611539602583610f5a565b9150611544826114dd565b604082019050919050565b600060208201905081810360008301526115688161152c565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006115cb602383610f5a565b91506115d68261156f565b604082019050919050565b600060208201905081810360008301526115fa816115be565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061163b82611064565b915061164683611064565b925082820190508082111561165e5761165d611601565b5b9291505056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206a1f2785c4369e95240b622b62526c4371bc471c1aa5a977871a980036d542b064736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x16 PUSH1 0x0 PUSH3 0x188 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426967446F676520436F696E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42444F4745000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA3 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH3 0x17A SWAP2 SWAP1 PUSH3 0x5BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x5DB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x24C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x257 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x5B8 DUP2 PUSH3 0x372 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x5AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x170D DUP1 PUSH3 0x5EB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x32F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x337 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x35C SWAP1 PUSH2 0x128A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x388 SWAP1 PUSH2 0x128A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 PUSH2 0x3EC PUSH2 0x9B3 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x414 DUP5 DUP5 DUP5 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x4D5 DUP5 PUSH2 0x420 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x4D0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1665 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x486 PUSH2 0x9B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE1B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A0 PUSH2 0x504 PUSH2 0x9B3 JUMP JUMPDEST DUP5 PUSH2 0x59B DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x515 PUSH2 0x9B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE70 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x9B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x619 PUSH2 0x68A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x679 PUSH1 0x0 PUSH2 0xE86 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x685 PUSH2 0x68A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x128A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x128A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x710 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 PUSH2 0x752 PUSH2 0x9B3 JUMP JUMPDEST DUP5 PUSH2 0x803 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B3 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x77C PUSH2 0x9B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE1B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x826 PUSH2 0x81F PUSH2 0x9B3 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8BF PUSH2 0x9B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DD PUSH2 0x68A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x999 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AB DUP2 PUSH2 0xE86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP1 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA90 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB77 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP1 PUSH2 0x154F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6D DUP4 DUP4 DUP4 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0xCD9 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE1B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD6E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE70 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5A SWAP2 SWAP1 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE7E SWAP2 SWAP1 PUSH2 0x1630 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF89 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB1 DUP3 PUSH2 0xF4F JUMP JUMPDEST PUSH2 0xFBB DUP2 DUP6 PUSH2 0xF5A JUMP JUMPDEST SWAP4 POP PUSH2 0xFCB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF6B JUMP JUMPDEST PUSH2 0xFD4 DUP2 PUSH2 0xF95 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF9 DUP2 DUP5 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1031 DUP3 PUSH2 0x1006 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1041 DUP2 PUSH2 0x1026 JUMP JUMPDEST DUP2 EQ PUSH2 0x104C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x105E DUP2 PUSH2 0x1038 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1077 DUP2 PUSH2 0x1064 JUMP JUMPDEST DUP2 EQ PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1094 DUP2 PUSH2 0x106E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B1 JUMPI PUSH2 0x10B0 PUSH2 0x1001 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10BF DUP6 DUP3 DUP7 ADD PUSH2 0x104F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10D0 DUP6 DUP3 DUP7 ADD PUSH2 0x1085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EF DUP2 PUSH2 0x10DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1119 DUP2 PUSH2 0x1064 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1134 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1110 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1153 JUMPI PUSH2 0x1152 PUSH2 0x1001 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP7 DUP3 DUP8 ADD PUSH2 0x104F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1172 DUP7 DUP3 DUP8 ADD PUSH2 0x104F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1183 DUP7 DUP3 DUP8 ADD PUSH2 0x1085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A3 DUP2 PUSH2 0x118D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x119A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DA JUMPI PUSH2 0x11D9 PUSH2 0x1001 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11E8 DUP5 DUP3 DUP6 ADD PUSH2 0x104F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11FA DUP2 PUSH2 0x1026 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1215 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1232 JUMPI PUSH2 0x1231 PUSH2 0x1001 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1240 DUP6 DUP3 DUP7 ADD PUSH2 0x104F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1251 DUP6 DUP3 DUP7 ADD PUSH2 0x104F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12B5 JUMPI PUSH2 0x12B4 PUSH2 0x125B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F1 PUSH1 0x20 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x12FC DUP3 PUSH2 0x12BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1320 DUP2 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1383 PUSH1 0x26 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x138E DUP3 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13B2 DUP2 PUSH2 0x1376 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1415 PUSH1 0x24 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x1420 DUP3 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1444 DUP2 PUSH2 0x1408 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A7 PUSH1 0x22 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x14B2 DUP3 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D6 DUP2 PUSH2 0x149A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1539 PUSH1 0x25 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x1544 DUP3 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1568 DUP2 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15CB PUSH1 0x23 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x15D6 DUP3 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15FA DUP2 PUSH2 0x15BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x163B DUP3 PUSH2 0x1064 JUMP JUMPDEST SWAP2 POP PUSH2 0x1646 DUP4 PUSH2 0x1064 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x165E JUMPI PUSH2 0x165D PUSH2 0x1601 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 PUSH11 0x1F2785C4369E95240B622B PUSH3 0x526C43 PUSH18 0xBC471C1AA5A977871A980036D542B064736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "278:10572:0:-:0;;;18192:21:2;18210:1;18192:9;;;:21;;:::i;:::-;871:22:0;;;;;;;;;;;;;;;;;:5;:22;;;;;;:::i;:::-;;904:17;;;;;;;;;;;;;;;;;:7;:17;;;;;;:::i;:::-;;944:2;932:9;;:14;;;;;;;;;;;;;;;;;;972:16;957:12;:31;;;;1023:12;;999:9;:21;1009:10;999:21;;;;;;;;;;;;;;;:36;;;;1074:10;1053:46;;1070:1;1053:46;;;1086:12;;1053:46;;;;;;:::i;:::-;;;;;;;;278:10572;;19439:173:2;19495:16;19514:6;;;;;;;;;;;19495:25;;19540:8;19531:6;;:17;;;;;;;;;;;;;;;;;;19595:8;19564:40;;19585:8;19564:40;;;;;;;;;;;;19484:128;19439:173;:::o;7:99:3:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:118::-;5321:24;5339:5;5321:24;:::i;:::-;5316:3;5309:37;5234:118;;:::o;5358:222::-;5451:4;5489:2;5478:9;5474:18;5466:26;;5502:71;5570:1;5559:9;5555:17;5546:6;5502:71;:::i;:::-;5358:222;;;;:::o;278:10572:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@VERSION_24": {
									"entryPoint": 2478,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_521": {
									"entryPoint": 2491,
									"id": 521,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_543": {
									"entryPoint": 3914,
									"id": 543,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1382": {
									"entryPoint": 2483,
									"id": 1382,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_1493": {
									"entryPoint": 3718,
									"id": 1493,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_365": {
									"entryPoint": 2948,
									"id": 365,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_821": {
									"entryPoint": 3696,
									"id": 821,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_183": {
									"entryPoint": 2096,
									"id": 183,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_204": {
									"entryPoint": 991,
									"id": 204,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_144": {
									"entryPoint": 1450,
									"id": 144,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_120": {
									"entryPoint": 1248,
									"id": 120,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_299": {
									"entryPoint": 1861,
									"id": 299,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_93": {
									"entryPoint": 1659,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_270": {
									"entryPoint": 1271,
									"id": 270,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_102": {
									"entryPoint": 845,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1423": {
									"entryPoint": 1674,
									"id": 1423,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1451": {
									"entryPoint": 1523,
									"id": 1451,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_906": {
									"entryPoint": 3611,
									"id": 906,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_111": {
									"entryPoint": 1715,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_130": {
									"entryPoint": 1021,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_242": {
									"entryPoint": 1031,
									"id": 242,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1474": {
									"entryPoint": 2231,
									"id": 1474,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_165": {
									"entryPoint": 2066,
									"id": 165,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3947,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5633,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4699,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4": {
									"entryPoint": 5049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2": {
									"entryPoint": 5487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13027:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:3",
														"type": ""
													}
												],
												"src": "7:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:3",
														"type": ""
													}
												],
												"src": "112:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:3",
																"statements": []
															},
															"src": "378:113:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:3",
														"type": ""
													}
												],
												"src": "287:246:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:3",
														"type": ""
													}
												],
												"src": "539:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:3",
														"type": ""
													}
												],
												"src": "647:377:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:3",
														"type": ""
													}
												],
												"src": "1030:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:3",
														"type": ""
													}
												],
												"src": "1349:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:3",
														"type": ""
													}
												],
												"src": "1676:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:3",
														"type": ""
													}
												],
												"src": "1808:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:3"
															},
															"nodeType": "YulIf",
															"src": "1963:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:3",
														"type": ""
													}
												],
												"src": "1910:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:3",
														"type": ""
													}
												],
												"src": "2038:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:3",
														"type": ""
													}
												],
												"src": "2183:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:3"
															},
															"nodeType": "YulIf",
															"src": "2319:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:3",
														"type": ""
													}
												],
												"src": "2266:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:3",
														"type": ""
													}
												],
												"src": "2394:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:3"
															},
															"nodeType": "YulIf",
															"src": "2632:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:3",
														"type": ""
													}
												],
												"src": "2539:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:3",
														"type": ""
													}
												],
												"src": "3019:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:3",
														"type": ""
													}
												],
												"src": "3115:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:3",
														"type": ""
													}
												],
												"src": "3230:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:3",
														"type": ""
													}
												],
												"src": "3446:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:3",
														"type": ""
													}
												],
												"src": "3570:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:3"
															},
															"nodeType": "YulIf",
															"src": "3908:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:3",
														"type": ""
													}
												],
												"src": "3798:619:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:3",
														"type": ""
													}
												],
												"src": "4423:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:3",
														"type": ""
													}
												],
												"src": "4515:112:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:3",
														"type": ""
													}
												],
												"src": "4633:214:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:3"
															},
															"nodeType": "YulIf",
															"src": "4929:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:3",
														"type": ""
													}
												],
												"src": "4853:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5253:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5293:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5275:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5275:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5248:3:3",
														"type": ""
													}
												],
												"src": "5188:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5410:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5420:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5443:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5456:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5456:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5382:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5394:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5405:4:3",
														"type": ""
													}
												],
												"src": "5312:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5623:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5669:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5636:32:3"
															},
															"nodeType": "YulIf",
															"src": "5633:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5762:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5806:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5889:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5934:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5585:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5596:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5608:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5616:6:3",
														"type": ""
													}
												],
												"src": "5540:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6068:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6165:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6155:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6189:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6179:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6020:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6257:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6267:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6277:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6298:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6328:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6334:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6302:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6375:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6389:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6403:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6411:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6399:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6399:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6355:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6348:26:3"
															},
															"nodeType": "YulIf",
															"src": "6345:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6478:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6492:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6492:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6442:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6473:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6462:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6462:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6439:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:38:3"
															},
															"nodeType": "YulIf",
															"src": "6436:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6241:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6250:6:3",
														"type": ""
													}
												],
												"src": "6206:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6638:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6660:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6668:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6656:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6656:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6672:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6649:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6630:6:3",
														"type": ""
													}
												],
												"src": "6532:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6866:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6876:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6942:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6883:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6883:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7048:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6959:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6959:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7061:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7072:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7077:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7068:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7068:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7061:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6854:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6862:3:3",
														"type": ""
													}
												],
												"src": "6720:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7263:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7273:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7285:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7296:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7281:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7281:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7273:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7320:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7331:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7316:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7316:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7339:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7345:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7335:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7335:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7309:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7309:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7309:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7365:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7499:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7373:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7373:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7365:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7243:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7258:4:3",
														"type": ""
													}
												],
												"src": "7092:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7623:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7645:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7653:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7641:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7641:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7657:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7634:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7634:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7634:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7713:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7721:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7709:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7709:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7726:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7702:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7702:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7702:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7615:6:3",
														"type": ""
													}
												],
												"src": "7517:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7894:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7904:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7970:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7975:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7911:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7911:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7904:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8076:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "7987:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7987:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7987:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8089:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8100:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8105:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8096:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8096:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8089:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7882:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7890:3:3",
														"type": ""
													}
												],
												"src": "7748:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8291:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8301:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8313:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8324:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8309:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8301:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8348:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8359:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8344:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8344:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8367:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8373:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8363:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8363:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8337:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8337:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8337:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8393:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8527:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8401:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8401:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8393:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8271:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8286:4:3",
														"type": ""
													}
												],
												"src": "8120:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8651:117:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8673:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8681:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8669:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8669:14:3"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8685:34:3",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8662:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8662:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8662:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8741:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8749:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8737:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8737:15:3"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8754:6:3",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8730:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8730:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8730:31:3"
														}
													]
												},
												"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8643:6:3",
														"type": ""
													}
												],
												"src": "8545:223:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8920:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8930:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8996:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9001:2:3",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8937:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8937:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8930:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9102:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																	"nodeType": "YulIdentifier",
																	"src": "9013:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9013:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9013:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9115:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9126:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9131:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9122:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9122:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9115:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8908:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8916:3:3",
														"type": ""
													}
												],
												"src": "8774:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9317:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9327:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9339:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9350:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9335:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9335:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9327:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9374:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9385:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9370:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9370:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9393:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9399:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9389:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9389:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9363:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9363:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9363:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9419:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9553:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9427:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9427:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9419:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9297:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9312:4:3",
														"type": ""
													}
												],
												"src": "9146:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9677:115:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9699:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9707:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9695:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9695:14:3"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9711:34:3",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9688:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9688:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9688:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9767:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9775:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9763:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:15:3"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9780:4:3",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9756:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9756:29:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9756:29:3"
														}
													]
												},
												"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9669:6:3",
														"type": ""
													}
												],
												"src": "9571:221:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9944:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9954:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10020:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10025:2:3",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9961:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9961:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9954:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10126:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																	"nodeType": "YulIdentifier",
																	"src": "10037:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10037:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10037:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10139:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10150:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10155:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10146:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10146:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10139:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9932:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9940:3:3",
														"type": ""
													}
												],
												"src": "9798:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10341:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10351:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10363:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10374:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10359:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10359:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10351:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10398:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10409:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10394:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10394:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10417:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10423:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10413:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10413:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10387:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10387:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10387:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10443:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10577:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10451:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10451:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10443:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10321:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10336:4:3",
														"type": ""
													}
												],
												"src": "10170:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10701:118:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10723:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10731:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10719:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10719:14:3"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10735:34:3",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10712:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10712:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10712:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10791:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10799:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10787:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10787:15:3"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10804:7:3",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10780:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10780:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10780:32:3"
														}
													]
												},
												"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10693:6:3",
														"type": ""
													}
												],
												"src": "10595:224:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10971:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10981:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11047:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11052:2:3",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10988:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10988:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10981:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11153:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																	"nodeType": "YulIdentifier",
																	"src": "11064:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11064:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11064:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11166:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11177:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11182:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11173:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11173:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11166:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10959:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10967:3:3",
														"type": ""
													}
												],
												"src": "10825:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11368:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11378:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11390:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11401:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11386:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11386:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11378:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11425:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11436:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11421:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11421:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11444:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11450:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11440:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11440:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11414:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11414:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11414:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11470:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11604:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11478:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11478:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11470:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11348:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11363:4:3",
														"type": ""
													}
												],
												"src": "11197:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11728:116:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11750:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11758:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11746:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11746:14:3"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11762:34:3",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11739:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11739:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11739:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11818:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11826:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11814:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11814:15:3"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11831:5:3",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11807:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11807:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11807:30:3"
														}
													]
												},
												"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11720:6:3",
														"type": ""
													}
												],
												"src": "11622:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11996:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12006:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12072:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12077:2:3",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12013:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12013:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12006:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12178:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																	"nodeType": "YulIdentifier",
																	"src": "12089:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12089:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12089:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12191:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12202:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12207:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12198:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12198:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12191:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11984:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11992:3:3",
														"type": ""
													}
												],
												"src": "11850:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12393:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12403:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12415:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12426:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12411:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12411:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12403:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12450:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12461:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12446:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12446:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12469:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12475:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12465:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12465:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12439:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12439:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12439:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12495:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12629:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12503:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12503:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12495:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12373:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12388:4:3",
														"type": ""
													}
												],
												"src": "12222:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12675:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12692:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12695:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12685:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12685:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12685:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12789:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12792:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12782:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12782:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12782:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12813:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12816:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12806:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12806:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12806:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12647:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12877:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12887:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12910:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12892:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12892:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12887:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12921:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12944:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12926:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12926:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12921:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12955:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12966:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12969:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12962:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12962:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12955:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12995:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12997:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12997:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12997:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12987:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12990:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12984:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12984:10:3"
															},
															"nodeType": "YulIf",
															"src": "12981:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12864:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12867:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12873:3:3",
														"type": ""
													}
												],
												"src": "12833:191:3"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a9059cbb11610066578063a9059cbb146102b3578063dd62ed3e146102e3578063f2fde38b14610313578063ffa1ad741461032f57610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a457c2d71461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61034d565b60405161011a9190610fdf565b60405180910390f35b61013d6004803603810190610138919061109a565b6103df565b60405161014a91906110f5565b60405180910390f35b61015b6103fd565b604051610168919061111f565b60405180910390f35b61018b6004803603810190610186919061113a565b610407565b60405161019891906110f5565b60405180910390f35b6101a96104e0565b6040516101b691906111a9565b60405180910390f35b6101d960048036038101906101d4919061109a565b6104f7565b6040516101e691906110f5565b60405180910390f35b610209600480360381019061020491906111c4565b6105aa565b604051610216919061111f565b60405180910390f35b6102276105f3565b005b61023161067b565b60405161023e9190611200565b60405180910390f35b61024f61068a565b60405161025c9190611200565b60405180910390f35b61026d6106b3565b60405161027a9190610fdf565b60405180910390f35b61029d6004803603810190610298919061109a565b610745565b6040516102aa91906110f5565b60405180910390f35b6102cd60048036038101906102c8919061109a565b610812565b6040516102da91906110f5565b60405180910390f35b6102fd60048036038101906102f8919061121b565b610830565b60405161030a919061111f565b60405180910390f35b61032d600480360381019061032891906111c4565b6108b7565b005b6103376109ae565b604051610344919061111f565b60405180910390f35b60606003805461035c9061128a565b80601f01602080910402602001604051908101604052809291908181526020018280546103889061128a565b80156103d55780601f106103aa576101008083540402835291602001916103d5565b820191906000526020600020905b8154815290600101906020018083116103b857829003601f168201915b5050505050905090565b60006103f36103ec6109b3565b84846109bb565b6001905092915050565b6000600654905090565b6000610414848484610b84565b6104d5846104206109b3565b6104d08560405180606001604052806028815260200161166560289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104866109b3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1b9092919063ffffffff16565b6109bb565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006105a06105046109b3565b8461059b85600260006105156109b3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e7090919063ffffffff16565b6109bb565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105fb6109b3565b73ffffffffffffffffffffffffffffffffffffffff1661061961068a565b73ffffffffffffffffffffffffffffffffffffffff161461066f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066690611307565b60405180910390fd5b6106796000610e86565b565b600061068561068a565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106c29061128a565b80601f01602080910402602001604051908101604052809291908181526020018280546106ee9061128a565b801561073b5780601f106107105761010080835404028352916020019161073b565b820191906000526020600020905b81548152906001019060200180831161071e57829003601f168201915b5050505050905090565b60006108086107526109b3565b84610803856040518060600160405280602581526020016116b3602591396002600061077c6109b3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1b9092919063ffffffff16565b6109bb565b6001905092915050565b600061082661081f6109b3565b8484610b84565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6108bf6109b3565b73ffffffffffffffffffffffffffffffffffffffff166108dd61068a565b73ffffffffffffffffffffffffffffffffffffffff1614610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90611307565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099990611399565b60405180910390fd5b6109ab81610e86565b50565b600181565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a219061142b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a90906114bd565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b77919061111f565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea9061154f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c59906115e1565b60405180910390fd5b610c6d838383610f4a565b610cd98160405180606001604052806026815260200161168d60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1b9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d6e81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e7090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e0e919061111f565b60405180910390a3505050565b6000838311158290610e63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5a9190610fdf565b60405180910390fd5b5082840390509392505050565b60008183610e7e9190611630565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f89578082015181840152602081019050610f6e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fb182610f4f565b610fbb8185610f5a565b9350610fcb818560208601610f6b565b610fd481610f95565b840191505092915050565b60006020820190508181036000830152610ff98184610fa6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103182611006565b9050919050565b61104181611026565b811461104c57600080fd5b50565b60008135905061105e81611038565b92915050565b6000819050919050565b61107781611064565b811461108257600080fd5b50565b6000813590506110948161106e565b92915050565b600080604083850312156110b1576110b0611001565b5b60006110bf8582860161104f565b92505060206110d085828601611085565b9150509250929050565b60008115159050919050565b6110ef816110da565b82525050565b600060208201905061110a60008301846110e6565b92915050565b61111981611064565b82525050565b60006020820190506111346000830184611110565b92915050565b60008060006060848603121561115357611152611001565b5b60006111618682870161104f565b93505060206111728682870161104f565b925050604061118386828701611085565b9150509250925092565b600060ff82169050919050565b6111a38161118d565b82525050565b60006020820190506111be600083018461119a565b92915050565b6000602082840312156111da576111d9611001565b5b60006111e88482850161104f565b91505092915050565b6111fa81611026565b82525050565b600060208201905061121560008301846111f1565b92915050565b6000806040838503121561123257611231611001565b5b60006112408582860161104f565b92505060206112518582860161104f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112a257607f821691505b6020821081036112b5576112b461125b565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112f1602083610f5a565b91506112fc826112bb565b602082019050919050565b60006020820190508181036000830152611320816112e4565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611383602683610f5a565b915061138e82611327565b604082019050919050565b600060208201905081810360008301526113b281611376565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611415602483610f5a565b9150611420826113b9565b604082019050919050565b6000602082019050818103600083015261144481611408565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114a7602283610f5a565b91506114b28261144b565b604082019050919050565b600060208201905081810360008301526114d68161149a565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611539602583610f5a565b9150611544826114dd565b604082019050919050565b600060208201905081810360008301526115688161152c565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006115cb602383610f5a565b91506115d68261156f565b604082019050919050565b600060208201905081810360008301526115fa816115be565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061163b82611064565b915061164683611064565b925082820190508082111561165e5761165d611601565b5b9291505056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206a1f2785c4369e95240b622b62526c4371bc471c1aa5a977871a980036d542b064736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x32F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x337 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x35C SWAP1 PUSH2 0x128A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x388 SWAP1 PUSH2 0x128A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 PUSH2 0x3EC PUSH2 0x9B3 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x414 DUP5 DUP5 DUP5 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x4D5 DUP5 PUSH2 0x420 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x4D0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1665 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x486 PUSH2 0x9B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE1B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A0 PUSH2 0x504 PUSH2 0x9B3 JUMP JUMPDEST DUP5 PUSH2 0x59B DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x515 PUSH2 0x9B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE70 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x9B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x619 PUSH2 0x68A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x679 PUSH1 0x0 PUSH2 0xE86 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x685 PUSH2 0x68A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x128A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x128A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x710 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 PUSH2 0x752 PUSH2 0x9B3 JUMP JUMPDEST DUP5 PUSH2 0x803 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B3 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x77C PUSH2 0x9B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE1B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x826 PUSH2 0x81F PUSH2 0x9B3 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8BF PUSH2 0x9B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DD PUSH2 0x68A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x999 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AB DUP2 PUSH2 0xE86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP1 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA90 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB77 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP1 PUSH2 0x154F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6D DUP4 DUP4 DUP4 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0xCD9 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE1B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD6E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE70 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5A SWAP2 SWAP1 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE7E SWAP2 SWAP1 PUSH2 0x1630 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF89 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB1 DUP3 PUSH2 0xF4F JUMP JUMPDEST PUSH2 0xFBB DUP2 DUP6 PUSH2 0xF5A JUMP JUMPDEST SWAP4 POP PUSH2 0xFCB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF6B JUMP JUMPDEST PUSH2 0xFD4 DUP2 PUSH2 0xF95 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF9 DUP2 DUP5 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1031 DUP3 PUSH2 0x1006 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1041 DUP2 PUSH2 0x1026 JUMP JUMPDEST DUP2 EQ PUSH2 0x104C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x105E DUP2 PUSH2 0x1038 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1077 DUP2 PUSH2 0x1064 JUMP JUMPDEST DUP2 EQ PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1094 DUP2 PUSH2 0x106E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B1 JUMPI PUSH2 0x10B0 PUSH2 0x1001 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10BF DUP6 DUP3 DUP7 ADD PUSH2 0x104F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10D0 DUP6 DUP3 DUP7 ADD PUSH2 0x1085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EF DUP2 PUSH2 0x10DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1119 DUP2 PUSH2 0x1064 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1134 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1110 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1153 JUMPI PUSH2 0x1152 PUSH2 0x1001 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP7 DUP3 DUP8 ADD PUSH2 0x104F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1172 DUP7 DUP3 DUP8 ADD PUSH2 0x104F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1183 DUP7 DUP3 DUP8 ADD PUSH2 0x1085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A3 DUP2 PUSH2 0x118D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x119A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DA JUMPI PUSH2 0x11D9 PUSH2 0x1001 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11E8 DUP5 DUP3 DUP6 ADD PUSH2 0x104F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11FA DUP2 PUSH2 0x1026 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1215 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1232 JUMPI PUSH2 0x1231 PUSH2 0x1001 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1240 DUP6 DUP3 DUP7 ADD PUSH2 0x104F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1251 DUP6 DUP3 DUP7 ADD PUSH2 0x104F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12B5 JUMPI PUSH2 0x12B4 PUSH2 0x125B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F1 PUSH1 0x20 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x12FC DUP3 PUSH2 0x12BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1320 DUP2 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1383 PUSH1 0x26 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x138E DUP3 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13B2 DUP2 PUSH2 0x1376 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1415 PUSH1 0x24 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x1420 DUP3 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1444 DUP2 PUSH2 0x1408 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A7 PUSH1 0x22 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x14B2 DUP3 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D6 DUP2 PUSH2 0x149A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1539 PUSH1 0x25 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x1544 DUP3 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1568 DUP2 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15CB PUSH1 0x23 DUP4 PUSH2 0xF5A JUMP JUMPDEST SWAP2 POP PUSH2 0x15D6 DUP3 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15FA DUP2 PUSH2 0x15BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x163B DUP3 PUSH2 0x1064 JUMP JUMPDEST SWAP2 POP PUSH2 0x1646 DUP4 PUSH2 0x1064 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x165E JUMPI PUSH2 0x165D PUSH2 0x1601 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 PUSH11 0x1F2785C4369E95240B622B PUSH3 0x526C43 PUSH18 0xBC471C1AA5A977871A980036D542B064736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "278:10572:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1278:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3565:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2377:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4257:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2221:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5120:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2548:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18953:94:2;;;:::i;:::-;;1115:93:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18302:87:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1488:95:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5923:400;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2938:216;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3217:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19202:229:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;367:35:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1278:91;1323:13;1356:5;1349:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1278:91;:::o;3565:210::-;3684:4;3706:39;3715:12;:10;:12::i;:::-;3729:7;3738:6;3706:8;:39::i;:::-;3763:4;3756:11;;3565:210;;;;:::o;2377:108::-;2438:7;2465:12;;2458:19;;2377:108;:::o;4257:454::-;4397:4;4414:36;4424:6;4432:9;4443:6;4414:9;:36::i;:::-;4461:220;4484:6;4505:12;:10;:12::i;:::-;4532:138;4588:6;4532:138;;;;;;;;;;;;;;;;;:11;:19;4544:6;4532:19;;;;;;;;;;;;;;;:33;4552:12;:10;:12::i;:::-;4532:33;;;;;;;;;;;;;;;;:37;;:138;;;;;:::i;:::-;4461:8;:220::i;:::-;4699:4;4692:11;;4257:454;;;;;:::o;2221:91::-;2270:5;2295:9;;;;;;;;;;;2288:16;;2221:91;:::o;5120:300::-;5235:4;5257:133;5280:12;:10;:12::i;:::-;5307:7;5329:50;5368:10;5329:11;:25;5341:12;:10;:12::i;:::-;5329:25;;;;;;;;;;;;;;;:34;5355:7;5329:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5257:8;:133::i;:::-;5408:4;5401:11;;5120:300;;;;:::o;2548:177::-;2667:7;2699:9;:18;2709:7;2699:18;;;;;;;;;;;;;;;;2692:25;;2548:177;;;:::o;18953:94:2:-;18533:12;:10;:12::i;:::-;18522:23;;:7;:5;:7::i;:::-;:23;;;18514:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;19018:21:::1;19036:1;19018:9;:21::i;:::-;18953:94::o:0;1115:93:0:-;1167:7;1193;:5;:7::i;:::-;1186:14;;1115:93;:::o;18302:87:2:-;18348:7;18375:6;;;;;;;;;;;18368:13;;18302:87;:::o;1488:95:0:-;1535:13;1568:7;1561:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1488:95;:::o;5923:400::-;6043:4;6065:228;6088:12;:10;:12::i;:::-;6115:7;6137:145;6194:15;6137:145;;;;;;;;;;;;;;;;;:11;:25;6149:12;:10;:12::i;:::-;6137:25;;;;;;;;;;;;;;;:34;6163:7;6137:34;;;;;;;;;;;;;;;;:38;;:145;;;;;:::i;:::-;6065:8;:228::i;:::-;6311:4;6304:11;;5923:400;;;;:::o;2938:216::-;3060:4;3082:42;3092:12;:10;:12::i;:::-;3106:9;3117:6;3082:9;:42::i;:::-;3142:4;3135:11;;2938:216;;;;:::o;3217:201::-;3351:7;3383:11;:18;3395:5;3383:18;;;;;;;;;;;;;;;:27;3402:7;3383:27;;;;;;;;;;;;;;;;3376:34;;3217:201;;;;:::o;19202:229:2:-;18533:12;:10;:12::i;:::-;18522:23;;:7;:5;:7::i;:::-;:23;;;18514:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;19325:1:::1;19305:22;;:8;:22;;::::0;19283:110:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;19404:19;19414:8;19404:9;:19::i;:::-;19202:229:::0;:::o;367:35:0:-;401:1;367:35;:::o;17646:98:2:-;17699:7;17726:10;17719:17;;17646:98;:::o;9309:380:0:-;9462:1;9445:19;;:5;:19;;;9437:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9543:1;9524:21;;:7;:21;;;9516:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9627:6;9597:11;:18;9609:5;9597:18;;;;;;;;;;;;;;;:27;9616:7;9597:27;;;;;;;;;;;;;;;:36;;;;9665:7;9649:32;;9658:5;9649:32;;;9674:6;9649:32;;;;;;:::i;:::-;;;;;;;;9309:380;;;:::o;6813:610::-;6971:1;6953:20;;:6;:20;;;6945:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7055:1;7034:23;;:9;:23;;;7026:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7110:47;7131:6;7139:9;7150:6;7110:20;:47::i;:::-;7190:108;7226:6;7190:108;;;;;;;;;;;;;;;;;:9;:17;7200:6;7190:17;;;;;;;;;;;;;;;;:21;;:108;;;;;:::i;:::-;7170:9;:17;7180:6;7170:17;;;;;;;;;;;;;;;:128;;;;7332:32;7357:6;7332:9;:20;7342:9;7332:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7309:9;:20;7319:9;7309:20;;;;;;;;;;;;;;;:55;;;;7397:9;7380:35;;7389:6;7380:35;;;7408:6;7380:35;;;;;;:::i;:::-;;;;;;;;6813:610;;;:::o;4846:240:2:-;4966:7;5024:1;5019;:6;;5027:12;5011:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5066:1;5062;:5;5055:12;;4846:240;;;;;:::o;2567:98::-;2625:7;2656:1;2652;:5;;;;:::i;:::-;2645:12;;2567:98;;;;:::o;19439:173::-;19495:16;19514:6;;;;;;;;;;;19495:25;;19540:8;19531:6;;:17;;;;;;;;;;;;;;;;;;19595:8;19564:40;;19585:8;19564:40;;;;;;;;;;;;19484:128;19439:173;:::o;10722:125:0:-;;;;:::o;7:99:3:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:182::-;6672:34;6668:1;6660:6;6656:14;6649:58;6532:182;:::o;6720:366::-;6862:3;6883:67;6947:2;6942:3;6883:67;:::i;:::-;6876:74;;6959:93;7048:3;6959:93;:::i;:::-;7077:2;7072:3;7068:12;7061:19;;6720:366;;;:::o;7092:419::-;7258:4;7296:2;7285:9;7281:18;7273:26;;7345:9;7339:4;7335:20;7331:1;7320:9;7316:17;7309:47;7373:131;7499:4;7373:131;:::i;:::-;7365:139;;7092:419;;;:::o;7517:225::-;7657:34;7653:1;7645:6;7641:14;7634:58;7726:8;7721:2;7713:6;7709:15;7702:33;7517:225;:::o;7748:366::-;7890:3;7911:67;7975:2;7970:3;7911:67;:::i;:::-;7904:74;;7987:93;8076:3;7987:93;:::i;:::-;8105:2;8100:3;8096:12;8089:19;;7748:366;;;:::o;8120:419::-;8286:4;8324:2;8313:9;8309:18;8301:26;;8373:9;8367:4;8363:20;8359:1;8348:9;8344:17;8337:47;8401:131;8527:4;8401:131;:::i;:::-;8393:139;;8120:419;;;:::o;8545:223::-;8685:34;8681:1;8673:6;8669:14;8662:58;8754:6;8749:2;8741:6;8737:15;8730:31;8545:223;:::o;8774:366::-;8916:3;8937:67;9001:2;8996:3;8937:67;:::i;:::-;8930:74;;9013:93;9102:3;9013:93;:::i;:::-;9131:2;9126:3;9122:12;9115:19;;8774:366;;;:::o;9146:419::-;9312:4;9350:2;9339:9;9335:18;9327:26;;9399:9;9393:4;9389:20;9385:1;9374:9;9370:17;9363:47;9427:131;9553:4;9427:131;:::i;:::-;9419:139;;9146:419;;;:::o;9571:221::-;9711:34;9707:1;9699:6;9695:14;9688:58;9780:4;9775:2;9767:6;9763:15;9756:29;9571:221;:::o;9798:366::-;9940:3;9961:67;10025:2;10020:3;9961:67;:::i;:::-;9954:74;;10037:93;10126:3;10037:93;:::i;:::-;10155:2;10150:3;10146:12;10139:19;;9798:366;;;:::o;10170:419::-;10336:4;10374:2;10363:9;10359:18;10351:26;;10423:9;10417:4;10413:20;10409:1;10398:9;10394:17;10387:47;10451:131;10577:4;10451:131;:::i;:::-;10443:139;;10170:419;;;:::o;10595:224::-;10735:34;10731:1;10723:6;10719:14;10712:58;10804:7;10799:2;10791:6;10787:15;10780:32;10595:224;:::o;10825:366::-;10967:3;10988:67;11052:2;11047:3;10988:67;:::i;:::-;10981:74;;11064:93;11153:3;11064:93;:::i;:::-;11182:2;11177:3;11173:12;11166:19;;10825:366;;;:::o;11197:419::-;11363:4;11401:2;11390:9;11386:18;11378:26;;11450:9;11444:4;11440:20;11436:1;11425:9;11421:17;11414:47;11478:131;11604:4;11478:131;:::i;:::-;11470:139;;11197:419;;;:::o;11622:222::-;11762:34;11758:1;11750:6;11746:14;11739:58;11831:5;11826:2;11818:6;11814:15;11807:30;11622:222;:::o;11850:366::-;11992:3;12013:67;12077:2;12072:3;12013:67;:::i;:::-;12006:74;;12089:93;12178:3;12089:93;:::i;:::-;12207:2;12202:3;12198:12;12191:19;;11850:366;;;:::o;12222:419::-;12388:4;12426:2;12415:9;12411:18;12403:26;;12475:9;12469:4;12465:20;12461:1;12450:9;12446:17;12439:47;12503:131;12629:4;12503:131;:::i;:::-;12495:139;;12222:419;;;:::o;12647:180::-;12695:77;12692:1;12685:88;12792:4;12789:1;12782:15;12816:4;12813:1;12806:15;12833:191;12873:3;12892:20;12910:1;12892:20;:::i;:::-;12887:25;;12926:20;12944:1;12926:20;:::i;:::-;12921:25;;12969:1;12966;12962:9;12955:16;;12990:3;12987:1;12984:10;12981:36;;;12997:18;;:::i;:::-;12981:36;12833:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1180200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"VERSION()": "417",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2908",
								"decimals()": "2502",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2580",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30463",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30786"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 278,
									"end": 10850,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 18210,
									"end": 18211,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 18192,
									"end": 18201,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 18192,
									"end": 18201,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 18192,
									"end": 18201,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 18192,
									"end": 18213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 871,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 871,
									"end": 893,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 871,
									"end": 893,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 871,
									"end": 893,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 871,
									"end": 893,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 871,
									"end": 893,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "426967446F676520436F696E0000000000000000000000000000000000000000"
								},
								{
									"begin": 871,
									"end": 893,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 871,
									"end": 876,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 871,
									"end": 893,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 871,
									"end": 893,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 871,
									"end": 893,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 871,
									"end": 893,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 871,
									"end": 893,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 904,
									"end": 921,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 904,
									"end": 921,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 904,
									"end": 921,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 904,
									"end": 921,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 921,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "PUSH",
									"source": 0,
									"value": "42444F4745000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 904,
									"end": 921,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 904,
									"end": 911,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 904,
									"end": 921,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 904,
									"end": 921,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 904,
									"end": 921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 904,
									"end": 921,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 904,
									"end": 921,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 944,
									"end": 946,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 932,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 932,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 946,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 932,
									"end": 946,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 932,
									"end": 946,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 932,
									"end": 946,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 932,
									"end": 946,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 972,
									"end": 988,
									"name": "PUSH",
									"source": 0,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 957,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 957,
									"end": 988,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 957,
									"end": 988,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 957,
									"end": 988,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 957,
									"end": 988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1023,
									"end": 1035,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1008,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 999,
									"end": 1020,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1035,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1084,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1070,
									"end": 1071,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 1086,
									"end": 1098,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1086,
									"end": 1098,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1053,
									"end": 1099,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1053,
									"end": 1099,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19439,
									"end": 19612,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 19439,
									"end": 19612,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 19495,
									"end": 19511,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 19514,
									"end": 19520,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 19514,
									"end": 19520,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 19514,
									"end": 19520,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 19514,
									"end": 19520,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 19514,
									"end": 19520,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 19514,
									"end": 19520,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 19514,
									"end": 19520,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 19514,
									"end": 19520,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 19514,
									"end": 19520,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 19514,
									"end": 19520,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 19514,
									"end": 19520,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 19495,
									"end": 19520,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 19495,
									"end": 19520,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 19540,
									"end": 19548,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19537,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 19531,
									"end": 19537,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 19531,
									"end": 19548,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 19595,
									"end": 19603,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 19585,
									"end": 19593,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 19564,
									"end": 19604,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 19484,
									"end": 19612,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 19439,
									"end": 19612,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 19439,
									"end": 19612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "88"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "89"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 3,
									"value": "89"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "90"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 3,
									"value": "90"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 3,
									"value": "88"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "91"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 3,
									"value": "91"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 3,
									"value": "92"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "94"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "92"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 3,
									"value": "94"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "95"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "96"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 3,
									"value": "96"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 3,
									"value": "95"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5234,
									"end": 5352,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 5234,
									"end": 5352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5321,
									"end": 5345,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "98"
								},
								{
									"begin": 5339,
									"end": 5344,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5321,
									"end": 5345,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 5321,
									"end": 5345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5321,
									"end": 5345,
									"name": "tag",
									"source": 3,
									"value": "98"
								},
								{
									"begin": 5321,
									"end": 5345,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5316,
									"end": 5319,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5309,
									"end": 5346,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5234,
									"end": 5352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5234,
									"end": 5352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5234,
									"end": 5352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5451,
									"end": 5455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5489,
									"end": 5491,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5478,
									"end": 5487,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5474,
									"end": 5492,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5502,
									"end": 5573,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 5570,
									"end": 5571,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5559,
									"end": 5568,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5555,
									"end": 5572,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5546,
									"end": 5552,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5502,
									"end": 5573,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 5502,
									"end": 5573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5502,
									"end": 5573,
									"name": "tag",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 5502,
									"end": 5573,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5358,
									"end": 5580,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5358,
									"end": 5580,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 10850,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a1f2785c4369e95240b622b62526c4371bc471c1aa5a977871a980036d542b064736f6c63430008130033",
									".code": [
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "FFA1AD74"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 10850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1278,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1278,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3565,
											"end": 3775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3565,
											"end": 3775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3565,
											"end": 3775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2377,
											"end": 2485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2377,
											"end": 2485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4257,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4257,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4257,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2221,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2221,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5120,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5120,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5120,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2548,
											"end": 2725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2548,
											"end": 2725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2548,
											"end": 2725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 19047,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 18953,
											"end": 19047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18953,
											"end": 19047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 18953,
											"end": 19047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 18953,
											"end": 19047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18953,
											"end": 19047,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 18953,
											"end": 19047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18953,
											"end": 19047,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1115,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1115,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 18302,
											"end": 18389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 18302,
											"end": 18389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1488,
											"end": 1583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1488,
											"end": 1583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5923,
											"end": 6323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5923,
											"end": 6323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5923,
											"end": 6323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2938,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2938,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2938,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3217,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3217,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3217,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 19202,
											"end": 19431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 19202,
											"end": 19431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 367,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 367,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 367,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 367,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 367,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 367,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 367,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 367,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1349,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1349,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3715,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3715,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3715,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3727,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3715,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3706,
											"end": 3745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3745,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3706,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3756,
											"end": 3767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2465,
											"end": 2477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4424,
											"end": 4430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4414,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4414,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4414,
											"end": 4450,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4414,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4484,
											"end": 4490,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4505,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4505,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4505,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4505,
											"end": 4517,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4505,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4588,
											"end": 4594,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4544,
											"end": 4550,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4552,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4552,
											"end": 4564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4532,
											"end": 4569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4532,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4461,
											"end": 4681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4681,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4461,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4703,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5235,
											"end": 5239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5257,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5280,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5280,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5280,
											"end": 5292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5292,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5280,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5307,
											"end": 5314,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5368,
											"end": 5378,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5340,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5341,
											"end": 5353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5341,
											"end": 5353,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5341,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5355,
											"end": 5362,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5329,
											"end": 5367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5329,
											"end": 5379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5379,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5329,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5257,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5257,
											"end": 5390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5257,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5257,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5408,
											"end": 5412,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5401,
											"end": 5412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5401,
											"end": 5412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2716,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2692,
											"end": 2717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2692,
											"end": 2717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 19047,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 18953,
											"end": 19047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18533,
											"end": 18545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 18533,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 18533,
											"end": 18545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18533,
											"end": 18545,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 18533,
											"end": 18545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18522,
											"end": 18545,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18522,
											"end": 18545,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18522,
											"end": 18529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 18522,
											"end": 18527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 18522,
											"end": 18529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18522,
											"end": 18529,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 18522,
											"end": 18529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18522,
											"end": 18545,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18522,
											"end": 18545,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18522,
											"end": 18545,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 18514,
											"end": 18582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19018,
											"end": 19039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 19036,
											"end": 19037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19018,
											"end": 19027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 19018,
											"end": 19039,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19018,
											"end": 19039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 19018,
											"end": 19039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18953,
											"end": 19047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1193,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1193,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18348,
											"end": 18355,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18368,
											"end": 18381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18368,
											"end": 18381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18302,
											"end": 18389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1568,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1561,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1561,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6088,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6088,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6088,
											"end": 6100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6088,
											"end": 6100,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6088,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6122,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6194,
											"end": 6209,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6148,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6149,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6149,
											"end": 6161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6161,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6149,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6162,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6170,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6137,
											"end": 6175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6137,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6065,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6293,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6065,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6304,
											"end": 6315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 6323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3092,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3092,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3082,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3082,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3146,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3135,
											"end": 3146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3394,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3400,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3410,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18533,
											"end": 18545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 18533,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 18533,
											"end": 18545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18533,
											"end": 18545,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 18533,
											"end": 18545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18522,
											"end": 18545,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18522,
											"end": 18545,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18522,
											"end": 18529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 18522,
											"end": 18527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 18522,
											"end": 18529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18522,
											"end": 18529,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 18522,
											"end": 18529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18522,
											"end": 18545,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18522,
											"end": 18545,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18522,
											"end": 18545,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 18514,
											"end": 18582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 18514,
											"end": 18582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19325,
											"end": 19326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19305,
											"end": 19327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19305,
											"end": 19327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19305,
											"end": 19313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19305,
											"end": 19327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19305,
											"end": 19327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19305,
											"end": 19327,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 19283,
											"end": 19393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 19283,
											"end": 19393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19404,
											"end": 19423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 19414,
											"end": 19422,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19404,
											"end": 19413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 19404,
											"end": 19423,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19404,
											"end": 19423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 19404,
											"end": 19423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19202,
											"end": 19431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 367,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 367,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 367,
											"end": 402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17646,
											"end": 17744,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 17646,
											"end": 17744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17699,
											"end": 17706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17726,
											"end": 17736,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 17719,
											"end": 17736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17719,
											"end": 17736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17646,
											"end": 17744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17646,
											"end": 17744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9309,
											"end": 9689,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 9309,
											"end": 9689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9462,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9450,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 9437,
											"end": 9505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 9437,
											"end": 9505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9524,
											"end": 9545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9524,
											"end": 9545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9524,
											"end": 9531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9524,
											"end": 9545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9524,
											"end": 9545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9524,
											"end": 9545,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 9516,
											"end": 9584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 9516,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9609,
											"end": 9614,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9616,
											"end": 9623,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9624,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9674,
											"end": 9680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9649,
											"end": 9681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9681,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 9689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 9689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 9689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 9689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6813,
											"end": 7423,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6813,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6971,
											"end": 6972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6953,
											"end": 6959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6945,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6945,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7055,
											"end": 7056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7034,
											"end": 7057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7034,
											"end": 7057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7034,
											"end": 7043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7034,
											"end": 7057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7034,
											"end": 7057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7034,
											"end": 7057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7026,
											"end": 7097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7026,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7110,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7131,
											"end": 7137,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7156,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7110,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7110,
											"end": 7157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7110,
											"end": 7157,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7110,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7199,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7206,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7190,
											"end": 7211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7190,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7179,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7186,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7298,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7357,
											"end": 7363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7341,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7351,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 7332,
											"end": 7356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7332,
											"end": 7364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7364,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7332,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7318,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7397,
											"end": 7406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7408,
											"end": 7414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7380,
											"end": 7415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7415,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6813,
											"end": 7423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6813,
											"end": 7423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6813,
											"end": 7423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6813,
											"end": 7423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 5086,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4846,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5025,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5019,
											"end": 5020,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5019,
											"end": 5025,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5019,
											"end": 5025,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5011,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5063,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5055,
											"end": 5067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5055,
											"end": 5067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 5086,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 5086,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 5086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 5086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 5086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 5086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2665,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2567,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2653,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2652,
											"end": 2657,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2652,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2657,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2652,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2665,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19439,
											"end": 19612,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 19439,
											"end": 19612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19495,
											"end": 19511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19495,
											"end": 19520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19495,
											"end": 19520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19540,
											"end": 19548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19531,
											"end": 19537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19595,
											"end": 19603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19585,
											"end": 19593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19564,
											"end": 19604,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 19484,
											"end": 19612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19439,
											"end": 19612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19439,
											"end": 19612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10847,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10722,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10722,
											"end": 10847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5275,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5456,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6145,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6146,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6155,
											"end": 6170,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6399,
											"end": 6416,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6462,
											"end": 6476,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6257,
											"end": 6526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6532,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6532,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6672,
											"end": 6706,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6668,
											"end": 6669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6666,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6532,
											"end": 6714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6532,
											"end": 6714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6720,
											"end": 7086,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6720,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 6865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6883,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 6883,
											"end": 6950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6883,
											"end": 6950,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6883,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6876,
											"end": 6950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6876,
											"end": 6950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6959,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 7048,
											"end": 7051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6959,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6959,
											"end": 7052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6959,
											"end": 7052,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6959,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7077,
											"end": 7079,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7072,
											"end": 7075,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7068,
											"end": 7080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7061,
											"end": 7080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7061,
											"end": 7080,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6720,
											"end": 7086,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6720,
											"end": 7086,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6720,
											"end": 7086,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6720,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7511,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7092,
											"end": 7511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7258,
											"end": 7262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7296,
											"end": 7298,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7285,
											"end": 7294,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7281,
											"end": 7299,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7273,
											"end": 7299,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7273,
											"end": 7299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7345,
											"end": 7354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7335,
											"end": 7355,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7331,
											"end": 7332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7320,
											"end": 7329,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7316,
											"end": 7333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7309,
											"end": 7356,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7373,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 7499,
											"end": 7503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7373,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 7373,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7373,
											"end": 7504,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 7373,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7365,
											"end": 7504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7365,
											"end": 7504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7517,
											"end": 7742,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7517,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7657,
											"end": 7691,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7653,
											"end": 7654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7651,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7734,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7721,
											"end": 7723,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7713,
											"end": 7719,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7709,
											"end": 7724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7702,
											"end": 7735,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7517,
											"end": 7742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7517,
											"end": 7742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 8114,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7748,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7890,
											"end": 7893,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7911,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 7975,
											"end": 7977,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7970,
											"end": 7973,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7911,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7911,
											"end": 7978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7911,
											"end": 7978,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 7911,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7904,
											"end": 7978,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7904,
											"end": 7978,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7987,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 8076,
											"end": 8079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7987,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7987,
											"end": 8080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7987,
											"end": 8080,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 7987,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8105,
											"end": 8107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8100,
											"end": 8103,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8096,
											"end": 8108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8089,
											"end": 8108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8089,
											"end": 8108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 8114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 8114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 8114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 8114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8539,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 8120,
											"end": 8539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8286,
											"end": 8290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8322,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8301,
											"end": 8327,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8301,
											"end": 8327,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8373,
											"end": 8382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8359,
											"end": 8360,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8348,
											"end": 8357,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8361,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8384,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8401,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 8527,
											"end": 8531,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8401,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8401,
											"end": 8532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8401,
											"end": 8532,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 8401,
											"end": 8532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8393,
											"end": 8532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8393,
											"end": 8532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8539,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8539,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8545,
											"end": 8768,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8545,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8719,
											"name": "PUSH",
											"source": 3,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 8681,
											"end": 8682,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8673,
											"end": 8679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8669,
											"end": 8683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8720,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8754,
											"end": 8760,
											"name": "PUSH",
											"source": 3,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8749,
											"end": 8751,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8741,
											"end": 8747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8752,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8545,
											"end": 8768,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8545,
											"end": 8768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8774,
											"end": 9140,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 8774,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8916,
											"end": 8919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9001,
											"end": 9003,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8996,
											"end": 8999,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8937,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 8937,
											"end": 9004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8937,
											"end": 9004,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 8937,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8930,
											"end": 9004,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8930,
											"end": 9004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9013,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 9102,
											"end": 9105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9013,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 9013,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9013,
											"end": 9106,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 9013,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9131,
											"end": 9133,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9126,
											"end": 9129,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9122,
											"end": 9134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9115,
											"end": 9134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9115,
											"end": 9134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8774,
											"end": 9140,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8774,
											"end": 9140,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8774,
											"end": 9140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8774,
											"end": 9140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9146,
											"end": 9565,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 9146,
											"end": 9565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9312,
											"end": 9316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9350,
											"end": 9352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9339,
											"end": 9348,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9335,
											"end": 9353,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9327,
											"end": 9353,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9327,
											"end": 9353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9399,
											"end": 9408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9393,
											"end": 9397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9409,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9385,
											"end": 9386,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9383,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9370,
											"end": 9387,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9363,
											"end": 9410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 9553,
											"end": 9557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 9427,
											"end": 9558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9558,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 9427,
											"end": 9558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9419,
											"end": 9558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9419,
											"end": 9558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9146,
											"end": 9565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9146,
											"end": 9565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9146,
											"end": 9565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9146,
											"end": 9565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9571,
											"end": 9792,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9571,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9711,
											"end": 9745,
											"name": "PUSH",
											"source": 3,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9707,
											"end": 9708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9699,
											"end": 9705,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9695,
											"end": 9709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9688,
											"end": 9746,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9784,
											"name": "PUSH",
											"source": 3,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9775,
											"end": 9777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9767,
											"end": 9773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9763,
											"end": 9778,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9756,
											"end": 9785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9571,
											"end": 9792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9571,
											"end": 9792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 10164,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 9798,
											"end": 10164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9940,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 10025,
											"end": 10027,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 10020,
											"end": 10023,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9961,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 9961,
											"end": 10028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9961,
											"end": 10028,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 9961,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 10028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 10028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10037,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 10126,
											"end": 10129,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10037,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 10037,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10037,
											"end": 10130,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 10037,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10157,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10150,
											"end": 10153,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10146,
											"end": 10158,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10139,
											"end": 10158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10139,
											"end": 10158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 10164,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 10164,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 10164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 10164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10170,
											"end": 10589,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 10170,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10336,
											"end": 10340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10374,
											"end": 10376,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10363,
											"end": 10372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10351,
											"end": 10377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10351,
											"end": 10377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10417,
											"end": 10421,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10413,
											"end": 10433,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10409,
											"end": 10410,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10394,
											"end": 10411,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10387,
											"end": 10434,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10451,
											"end": 10582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 10577,
											"end": 10581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10451,
											"end": 10582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 10451,
											"end": 10582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10451,
											"end": 10582,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 10451,
											"end": 10582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10443,
											"end": 10582,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10443,
											"end": 10582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10170,
											"end": 10589,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10170,
											"end": 10589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10170,
											"end": 10589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10170,
											"end": 10589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10595,
											"end": 10819,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10595,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10735,
											"end": 10769,
											"name": "PUSH",
											"source": 3,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10731,
											"end": 10732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10723,
											"end": 10729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10719,
											"end": 10733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10712,
											"end": 10770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10811,
											"name": "PUSH",
											"source": 3,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10799,
											"end": 10801,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10787,
											"end": 10802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10780,
											"end": 10812,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10595,
											"end": 10819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10595,
											"end": 10819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 11191,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 10825,
											"end": 11191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10967,
											"end": 10970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10988,
											"end": 11055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 11052,
											"end": 11054,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 11047,
											"end": 11050,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10988,
											"end": 11055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 10988,
											"end": 11055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10988,
											"end": 11055,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 10988,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10981,
											"end": 11055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10981,
											"end": 11055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11064,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 11153,
											"end": 11156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11064,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 11064,
											"end": 11157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11064,
											"end": 11157,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 11064,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11182,
											"end": 11184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11177,
											"end": 11180,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11173,
											"end": 11185,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11166,
											"end": 11185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 11191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 11191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 11191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 11191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11197,
											"end": 11616,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 11197,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11363,
											"end": 11367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11401,
											"end": 11403,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11390,
											"end": 11399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11386,
											"end": 11404,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11378,
											"end": 11404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11378,
											"end": 11404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11450,
											"end": 11459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11444,
											"end": 11448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11440,
											"end": 11460,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11436,
											"end": 11437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11425,
											"end": 11434,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11421,
											"end": 11438,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11414,
											"end": 11461,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11478,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 11604,
											"end": 11608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11478,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 11478,
											"end": 11609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11478,
											"end": 11609,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 11478,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11470,
											"end": 11609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11470,
											"end": 11609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11197,
											"end": 11616,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11197,
											"end": 11616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11197,
											"end": 11616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11197,
											"end": 11616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11622,
											"end": 11844,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 11622,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11762,
											"end": 11796,
											"name": "PUSH",
											"source": 3,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11758,
											"end": 11759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11750,
											"end": 11756,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11746,
											"end": 11760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11739,
											"end": 11797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11831,
											"end": 11836,
											"name": "PUSH",
											"source": 3,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11826,
											"end": 11828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11818,
											"end": 11824,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11814,
											"end": 11829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11807,
											"end": 11837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11622,
											"end": 11844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11622,
											"end": 11844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11850,
											"end": 12216,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 11850,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11992,
											"end": 11995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12013,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 12077,
											"end": 12079,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 12013,
											"end": 12080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12080,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 12013,
											"end": 12080,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12080,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12006,
											"end": 12080,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12089,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 12178,
											"end": 12181,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12089,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 12089,
											"end": 12182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12089,
											"end": 12182,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 12089,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12207,
											"end": 12209,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12202,
											"end": 12205,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12198,
											"end": 12210,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12191,
											"end": 12210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12191,
											"end": 12210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11850,
											"end": 12216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11850,
											"end": 12216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11850,
											"end": 12216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11850,
											"end": 12216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12222,
											"end": 12641,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 12222,
											"end": 12641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12388,
											"end": 12392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12426,
											"end": 12428,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12415,
											"end": 12424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12411,
											"end": 12429,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12403,
											"end": 12429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12403,
											"end": 12429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12475,
											"end": 12484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12469,
											"end": 12473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12465,
											"end": 12485,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12461,
											"end": 12462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12446,
											"end": 12463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12439,
											"end": 12486,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12503,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 12629,
											"end": 12633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12503,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 12503,
											"end": 12634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12503,
											"end": 12634,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 12503,
											"end": 12634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12495,
											"end": 12634,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12495,
											"end": 12634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12222,
											"end": 12641,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12222,
											"end": 12641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12222,
											"end": 12641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12222,
											"end": 12641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12647,
											"end": 12827,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 12647,
											"end": 12827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12695,
											"end": 12772,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12692,
											"end": 12693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12685,
											"end": 12773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12792,
											"end": 12796,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 12789,
											"end": 12790,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12782,
											"end": 12797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12816,
											"end": 12820,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 12813,
											"end": 12814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12806,
											"end": 12821,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12833,
											"end": 13024,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 12833,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12873,
											"end": 12876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12892,
											"end": 12912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 12910,
											"end": 12911,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12892,
											"end": 12912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 12892,
											"end": 12912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12892,
											"end": 12912,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 12892,
											"end": 12912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12887,
											"end": 12912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12887,
											"end": 12912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12926,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 12944,
											"end": 12945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12926,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 12926,
											"end": 12946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12926,
											"end": 12946,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 12926,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12921,
											"end": 12946,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12921,
											"end": 12946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12969,
											"end": 12970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12966,
											"end": 12967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12962,
											"end": 12971,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12955,
											"end": 12971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12955,
											"end": 12971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12990,
											"end": 12993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12987,
											"end": 12988,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12984,
											"end": 12994,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 12981,
											"end": 13017,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12981,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 12981,
											"end": 13017,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12997,
											"end": 13015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 12997,
											"end": 13015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 12997,
											"end": 13015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12997,
											"end": 13015,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 12997,
											"end": 13015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12981,
											"end": 13017,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 12981,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12833,
											"end": 13024,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12833,
											"end": 13024,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12833,
											"end": 13024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12833,
											"end": 13024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12833,
											"end": 13024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							},
							"sourceList": [
								"task1/BigDoge.sol",
								"task1/interface.sol",
								"task1/utils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"VERSION()": "ffa1ad74",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"TokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IBEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IBEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IBEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {BEP20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IBEP20-balanceOf} and {IBEP20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IBEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IBEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IBEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task1/BigDoge.sol\":\"BigDoge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"task1/BigDoge.sol\":{\"keccak256\":\"0x35fa1bc95cd2170b0b0118c59c489985babb37441712a5c3643f7408ff339e2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c3f5b6c9dc20713cbb7a918f027c17e168c5d950294f2228d6d91957638f4a5\",\"dweb:/ipfs/QmUQPNRWwStVvHQZLzqM1SegREgpAscVGygyNG6X9KoWn8\"]},\"task1/interface.sol\":{\"keccak256\":\"0xb9bbf4c02fb5f7a8f6b55978ad1e2288d2dc84612781d16c0531b5cd564167ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90dedec6d25617c8f5f08eadc81fbda788445a346ec4d09204cf6a399ac45a4b\",\"dweb:/ipfs/QmZY8wNn38B9UjJxrAqByuWcy7D311exMNWWpxyP9RZD5Z\"]},\"task1/utils.sol\":{\"keccak256\":\"0xb5cac50c364776987d57d8d23016a14dfe055ea08e1f251ba5245de02c1de56a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efef4f21e4d9c0433394d5814e6a2d8175af6d385abc943c9aabf3c7c3637d80\",\"dweb:/ipfs/QmSW5XHWUDtqGCvkRXwhegmF2sQt5LyEoLKvgXQX7Cm3aD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1396,
								"contract": "task1/BigDoge.sol:BigDoge",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 28,
								"contract": "task1/BigDoge.sol:BigDoge",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 34,
								"contract": "task1/BigDoge.sol:BigDoge",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 36,
								"contract": "task1/BigDoge.sol:BigDoge",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 38,
								"contract": "task1/BigDoge.sol:BigDoge",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 40,
								"contract": "task1/BigDoge.sol:BigDoge",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 42,
								"contract": "task1/BigDoge.sol:BigDoge",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"task1/interface.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task1/interface.sol\":\"IBEP20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"task1/interface.sol\":{\"keccak256\":\"0xb9bbf4c02fb5f7a8f6b55978ad1e2288d2dc84612781d16c0531b5cd564167ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90dedec6d25617c8f5f08eadc81fbda788445a346ec4d09204cf6a399ac45a4b\",\"dweb:/ipfs/QmZY8wNn38B9UjJxrAqByuWcy7D311exMNWWpxyP9RZD5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"task1/utils.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"task1/utils.sol\":6807:13321  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"task1/utils.sol\":6807:13321  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dc3696f135d36d68e7c3334184e6f136a9c3e20cfa2626bc6ab53a1a9b04995464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc3696f135d36d68e7c3334184e6f136a9c3e20cfa2626bc6ab53a1a9b04995464736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC CALLDATASIZE SWAP7 CALL CALLDATALOAD 0xD3 PUSH14 0x68E7C3334184E6F136A9C3E20CFA 0x26 0x26 0xBC PUSH11 0xB53A1A9B04995464736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "6807:6514:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc3696f135d36d68e7c3334184e6f136a9c3e20cfa2626bc6ab53a1a9b04995464736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC CALLDATASIZE SWAP7 CALL CALLDATALOAD 0xD3 PUSH14 0x68E7C3334184E6F136A9C3E20CFA 0x26 0x26 0xBC PUSH11 0xB53A1A9B04995464736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "6807:6514:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 13321,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc3696f135d36d68e7c3334184e6f136a9c3e20cfa2626bc6ab53a1a9b04995464736f6c63430008130033",
									".code": [
										{
											"begin": 6807,
											"end": 13321,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 13321,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 13321,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 13321,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6807,
											"end": 13321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 13321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 13321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 13321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 13321,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"task1/BigDoge.sol",
								"task1/interface.sol",
								"task1/utils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task1/utils.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"task1/interface.sol\":{\"keccak256\":\"0xb9bbf4c02fb5f7a8f6b55978ad1e2288d2dc84612781d16c0531b5cd564167ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90dedec6d25617c8f5f08eadc81fbda788445a346ec4d09204cf6a399ac45a4b\",\"dweb:/ipfs/QmZY8wNn38B9UjJxrAqByuWcy7D311exMNWWpxyP9RZD5Z\"]},\"task1/utils.sol\":{\"keccak256\":\"0xb5cac50c364776987d57d8d23016a14dfe055ea08e1f251ba5245de02c1de56a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efef4f21e4d9c0433394d5814e6a2d8175af6d385abc943c9aabf3c7c3637d80\",\"dweb:/ipfs/QmSW5XHWUDtqGCvkRXwhegmF2sQt5LyEoLKvgXQX7Cm3aD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task1/utils.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"task1/interface.sol\":{\"keccak256\":\"0xb9bbf4c02fb5f7a8f6b55978ad1e2288d2dc84612781d16c0531b5cd564167ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90dedec6d25617c8f5f08eadc81fbda788445a346ec4d09204cf6a399ac45a4b\",\"dweb:/ipfs/QmZY8wNn38B9UjJxrAqByuWcy7D311exMNWWpxyP9RZD5Z\"]},\"task1/utils.sol\":{\"keccak256\":\"0xb5cac50c364776987d57d8d23016a14dfe055ea08e1f251ba5245de02c1de56a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efef4f21e4d9c0433394d5814e6a2d8175af6d385abc943c9aabf3c7c3637d80\",\"dweb:/ipfs/QmSW5XHWUDtqGCvkRXwhegmF2sQt5LyEoLKvgXQX7Cm3aD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task1/utils.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"task1/interface.sol\":{\"keccak256\":\"0xb9bbf4c02fb5f7a8f6b55978ad1e2288d2dc84612781d16c0531b5cd564167ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90dedec6d25617c8f5f08eadc81fbda788445a346ec4d09204cf6a399ac45a4b\",\"dweb:/ipfs/QmZY8wNn38B9UjJxrAqByuWcy7D311exMNWWpxyP9RZD5Z\"]},\"task1/utils.sol\":{\"keccak256\":\"0xb5cac50c364776987d57d8d23016a14dfe055ea08e1f251ba5245de02c1de56a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efef4f21e4d9c0433394d5814e6a2d8175af6d385abc943c9aabf3c7c3637d80\",\"dweb:/ipfs/QmSW5XHWUDtqGCvkRXwhegmF2sQt5LyEoLKvgXQX7Cm3aD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1396,
								"contract": "task1/utils.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"task1/utils.sol\":13796:17593  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"task1/utils.sol\":13796:17593  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d66d31a942974d03c5b52f3931399e4728e4899cf0e6141f61cf210bab2973fa64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d66d31a942974d03c5b52f3931399e4728e4899cf0e6141f61cf210bab2973fa64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH14 0x31A942974D03C5B52F3931399E47 0x28 0xE4 DUP10 SWAP13 CREATE 0xE6 EQ 0x1F PUSH2 0xCF21 SIGNEXTEND 0xAB 0x29 PUSH20 0xFA64736F6C634300081300330000000000000000 ",
							"sourceMap": "13796:3797:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d66d31a942974d03c5b52f3931399e4728e4899cf0e6141f61cf210bab2973fa64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH14 0x31A942974D03C5B52F3931399E47 0x28 0xE4 DUP10 SWAP13 CREATE 0xE6 EQ 0x1F PUSH2 0xCF21 SIGNEXTEND 0xAB 0x29 PUSH20 0xFA64736F6C634300081300330000000000000000 ",
							"sourceMap": "13796:3797:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 13796,
									"end": 17593,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d66d31a942974d03c5b52f3931399e4728e4899cf0e6141f61cf210bab2973fa64736f6c63430008130033",
									".code": [
										{
											"begin": 13796,
											"end": 17593,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 13796,
											"end": 17593,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 13796,
											"end": 17593,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13796,
											"end": 17593,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 13796,
											"end": 17593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13796,
											"end": 17593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13796,
											"end": 17593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13796,
											"end": 17593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13796,
											"end": 17593,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"task1/BigDoge.sol",
								"task1/interface.sol",
								"task1/utils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task1/utils.sol\":\"SafeBEP20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"task1/interface.sol\":{\"keccak256\":\"0xb9bbf4c02fb5f7a8f6b55978ad1e2288d2dc84612781d16c0531b5cd564167ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90dedec6d25617c8f5f08eadc81fbda788445a346ec4d09204cf6a399ac45a4b\",\"dweb:/ipfs/QmZY8wNn38B9UjJxrAqByuWcy7D311exMNWWpxyP9RZD5Z\"]},\"task1/utils.sol\":{\"keccak256\":\"0xb5cac50c364776987d57d8d23016a14dfe055ea08e1f251ba5245de02c1de56a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efef4f21e4d9c0433394d5814e6a2d8175af6d385abc943c9aabf3c7c3637d80\",\"dweb:/ipfs/QmSW5XHWUDtqGCvkRXwhegmF2sQt5LyEoLKvgXQX7Cm3aD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"task1/utils.sol\":91:6728  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"task1/utils.sol\":91:6728  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200e84b51dec55736d75ddc15791523e0d1b89d62f260c43802e7b6223374e734064736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e84b51dec55736d75ddc15791523e0d1b89d62f260c43802e7b6223374e734064736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE DUP5 0xB5 SAR 0xEC SSTORE PUSH20 0x6D75DDC15791523E0D1B89D62F260C43802E7B62 0x23 CALLDATACOPY 0x4E PUSH20 0x4064736F6C634300081300330000000000000000 ",
							"sourceMap": "91:6637:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e84b51dec55736d75ddc15791523e0d1b89d62f260c43802e7b6223374e734064736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE DUP5 0xB5 SAR 0xEC SSTORE PUSH20 0x6D75DDC15791523E0D1B89D62F260C43802E7B62 0x23 CALLDATACOPY 0x4E PUSH20 0x4064736F6C634300081300330000000000000000 ",
							"sourceMap": "91:6637:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 91,
									"end": 6728,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e84b51dec55736d75ddc15791523e0d1b89d62f260c43802e7b6223374e734064736f6c63430008130033",
									".code": [
										{
											"begin": 91,
											"end": 6728,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 91,
											"end": 6728,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 91,
											"end": 6728,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 91,
											"end": 6728,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 91,
											"end": 6728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 91,
											"end": 6728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 91,
											"end": 6728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 6728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 91,
											"end": 6728,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"task1/BigDoge.sol",
								"task1/interface.sol",
								"task1/utils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task1/utils.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"task1/interface.sol\":{\"keccak256\":\"0xb9bbf4c02fb5f7a8f6b55978ad1e2288d2dc84612781d16c0531b5cd564167ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90dedec6d25617c8f5f08eadc81fbda788445a346ec4d09204cf6a399ac45a4b\",\"dweb:/ipfs/QmZY8wNn38B9UjJxrAqByuWcy7D311exMNWWpxyP9RZD5Z\"]},\"task1/utils.sol\":{\"keccak256\":\"0xb5cac50c364776987d57d8d23016a14dfe055ea08e1f251ba5245de02c1de56a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efef4f21e4d9c0433394d5814e6a2d8175af6d385abc943c9aabf3c7c3637d80\",\"dweb:/ipfs/QmSW5XHWUDtqGCvkRXwhegmF2sQt5LyEoLKvgXQX7Cm3aD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"task1/BigDoge.sol": {
				"ast": {
					"absolutePath": "task1/BigDoge.sol",
					"exportedSymbols": {
						"Address": [
							1159
						],
						"BaseToken": [
							12
						],
						"BigDoge": [
							544
						],
						"Context": [
							1392
						],
						"IBEP20": [
							645
						],
						"Ownable": [
							1494
						],
						"SafeBEP20": [
							1373
						],
						"SafeMath": [
							957
						]
					},
					"id": 545,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"absolutePath": "task1/interface.sol",
							"file": "./interface.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 646,
							"src": "62:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "task1/utils.sol",
							"file": "./utils.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 1495,
							"src": "89:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "BaseToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 12,
							"linearizedBaseContracts": [
								12
							],
							"name": "BaseToken",
							"nameLocation": "136:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "fde888083b38fe6deac8498d5daebda0d38d0d3e6167e434b633f955152766fa",
									"id": 11,
									"name": "TokenCreated",
									"nameLocation": "159:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "198:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "182:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "230:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "214:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "246:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:97:0"
									},
									"src": "153:116:0"
								}
							],
							"scope": 545,
							"src": "118:154:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 13,
										"name": "IBEP20",
										"nameLocations": [
											"298:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 645,
										"src": "298:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "298:6:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "Ownable",
										"nameLocations": [
											"306:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1494,
										"src": "306:7:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "306:7:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "BaseToken",
										"nameLocations": [
											"315:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 12,
										"src": "315:9:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "315:9:0"
								}
							],
							"canonicalName": "BigDoge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 544,
							"linearizedBaseContracts": [
								544,
								12,
								1494,
								1392,
								645
							],
							"name": "BigDoge",
							"nameLocation": "287:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 21,
									"libraryName": {
										"id": 19,
										"name": "SafeMath",
										"nameLocations": [
											"338:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 957,
										"src": "338:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "332:27:0",
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "351:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "ffa1ad74",
									"id": 24,
									"mutability": "constant",
									"name": "VERSION",
									"nameLocation": "391:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "367:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "367:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "401:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "447:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "411:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 27,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "419:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "411:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "430:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "519:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "463:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 33,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "471:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "463:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 32,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 30,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "490:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "482:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 31,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "501:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "554:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "539:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 35,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "539:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "581:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "566:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 37,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "566:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 40,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "609:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "595:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 39,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "595:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "641:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "625:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 41,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "625:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "860:247:0",
										"statements": [
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 45,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "871:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "426967446f676520436f696e",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "879:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_3184d17e0d3845c2d976d56cbc5d31340f8d8c3897f486b69e27b333941d72f2",
															"typeString": "literal_string \"BigDoge Coin\""
														},
														"value": "BigDoge Coin"
													},
													"src": "871:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "871:22:0"
											},
											{
												"expression": {
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 49,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "42444f4745",
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_8aece798780726b74b67f3ee1f75e6da19a099e17edcf16af1d696ea0f7f6a56",
															"typeString": "literal_string \"BDOGE\""
														},
														"value": "BDOGE"
													},
													"src": "904:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "904:17:0"
											},
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "932:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "944:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "932:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "932:14:0"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "957:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "313030303030303030",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "972:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000_by_1",
																"typeString": "int_const 100000000"
															},
															"value": "100000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "982:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "986:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "982:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "972:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														}
													},
													"src": "957:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "957:31:0"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 65,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "999:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 68,
														"indexExpression": {
															"expression": {
																"id": 66,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1009:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1013:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1009:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "999:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 69,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1023:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "999:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "999:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1070:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1062:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 73,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1062:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1062:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 77,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1074:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1078:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1074:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1086:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 72,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "1053:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1053:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "EmitStatement",
												"src": "1048:51:0"
											}
										]
									},
									"id": 83,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "673:178:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:0:0"
									},
									"scope": 544,
									"src": "662:445:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										576
									],
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1175:33:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 89,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "1193:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1193:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 88,
												"id": 91,
												"nodeType": "Return",
												"src": "1186:14:0"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1124:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 85,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1149:8:0"
									},
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1132:2:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1167:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:9:0"
									},
									"scope": 544,
									"src": "1115:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										570
									],
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1338:31:0",
										"statements": [
											{
												"expression": {
													"id": 99,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1356:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 98,
												"id": 100,
												"nodeType": "Return",
												"src": "1349:12:0"
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1216:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1287:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1323:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 96,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1323:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:0"
									},
									"scope": 544,
									"src": "1278:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										564
									],
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1550:33:0",
										"statements": [
											{
												"expression": {
													"id": 108,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 38,
													"src": "1568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 107,
												"id": 109,
												"nodeType": "Return",
												"src": "1561:14:0"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1377:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1497:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1503:2:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1535:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 105,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1535:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1534:15:0"
									},
									"scope": 544,
									"src": "1488:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										558
									],
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "2277:35:0",
										"statements": [
											{
												"expression": {
													"id": 117,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 40,
													"src": "2295:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 116,
												"id": 118,
												"nodeType": "Return",
												"src": "2288:16:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1591:624:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {BEP20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IBEP20-balanceOf} and {IBEP20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2230:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2238:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "2270:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 114,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2270:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:7:0"
									},
									"scope": 544,
									"src": "2221:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										552
									],
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "2447:38:0",
										"statements": [
											{
												"expression": {
													"id": 127,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 42,
													"src": "2465:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 126,
												"id": 128,
												"nodeType": "Return",
												"src": "2458:19:0"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "2320:51:0",
										"text": " @dev See {IBEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2386:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 123,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2420:8:0"
									},
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2397:2:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2438:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:9:0"
									},
									"scope": 544,
									"src": "2377:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2681:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 139,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "2699:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 141,
													"indexExpression": {
														"id": 140,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "2709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2699:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 138,
												"id": 142,
												"nodeType": "Return",
												"src": "2692:25:0"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "2493:49:0",
										"text": " @dev See {IBEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2557:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 135,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2640:8:0"
									},
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2575:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2567:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2566:17:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2667:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:9:0"
									},
									"scope": 544,
									"src": "2548:177:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										594
									],
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "3071:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 156,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "3092:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3092:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 158,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3106:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 155,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "3082:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3082:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "3082:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3142:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 154,
												"id": 163,
												"nodeType": "Return",
												"src": "3135:11:0"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2733:199:0",
										"text": " @dev See {IBEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2947:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3033:8:0"
									},
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2964:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2956:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2983:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2975:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2955:35:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "3060:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3060:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3059:6:0"
									},
									"scope": 544,
									"src": "2938:216:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										604
									],
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "3365:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 176,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "3383:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 178,
														"indexExpression": {
															"id": 177,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "3395:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3383:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 180,
													"indexExpression": {
														"id": 179,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "3402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3383:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 175,
												"id": 181,
												"nodeType": "Return",
												"src": "3376:34:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "3162:49:0",
										"text": " @dev See {IBEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3226:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3324:8:0"
									},
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3244:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "3236:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3259:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "3251:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:32:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "3351:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3350:9:0"
									},
									"scope": 544,
									"src": "3217:201:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										614
									],
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "3695:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 195,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "3715:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3715:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 197,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "3729:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 198,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "3738:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 194,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "3706:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3706:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "3706:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3763:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 193,
												"id": 202,
												"nodeType": "Return",
												"src": "3756:11:0"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "3426:133:0",
										"text": " @dev See {IBEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3574:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3657:8:0"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "3582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3607:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "3599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:33:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "3684:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 191,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:6:0"
									},
									"scope": 544,
									"src": "3565:210:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										626
									],
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "4403:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "4424:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 219,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "4432:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 220,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "4443:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 217,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "4414:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4414:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "4414:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 224,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "4484:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 225,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "4505:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4505:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 234,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4588:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4613:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 227,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 34,
																			"src": "4532:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 229,
																		"indexExpression": {
																			"id": 228,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "4544:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4532:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 232,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 230,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "4552:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4552:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4532:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4566:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 906,
																"src": "4532:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:138:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 223,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "4461:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4461:220:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "4461:220:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4699:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 216,
												"id": 240,
												"nodeType": "Return",
												"src": "4692:11:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "3783:468:0",
										"text": " @dev See {IBEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4266:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4379:8:0"
									},
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4297:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4289:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4322:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4314:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4350:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4342:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4278:85:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4397:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4397:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4396:6:0"
									},
									"scope": 544,
									"src": "4257:454:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "5246:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 253,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "5280:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "5307:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 263,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "5368:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 256,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 34,
																			"src": "5329:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 259,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 257,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "5341:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5341:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5329:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 261,
																	"indexExpression": {
																		"id": 260,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 245,
																		"src": "5355:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5329:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5364:3:0",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 821,
																"src": "5329:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5329:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "5257:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5257:133:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "5257:133:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 251,
												"id": 268,
												"nodeType": "Return",
												"src": "5401:11:0"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "4719:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IBEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5129:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5155:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5147:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5172:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5164:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5146:37:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5235:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5235:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5234:6:0"
									},
									"scope": 544,
									"src": "5120:300:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "6054:269:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 281,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "6088:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6088:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 283,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "6115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 291,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "6194:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6228:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 284,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 34,
																			"src": "6137:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 287,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 285,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "6149:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6149:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6137:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 289,
																	"indexExpression": {
																		"id": 288,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "6163:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6137:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6172:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 906,
																"src": "6137:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6137:145:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 280,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "6065:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6065:228:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "6065:228:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6311:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 279,
												"id": 297,
												"nodeType": "Return",
												"src": "6304:11:0"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "5428:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IBEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "5932:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5958:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "5950:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5950:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "5975:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "5967:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5949:42:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "6043:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6043:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6042:6:0"
									},
									"scope": 544,
									"src": "5923:400:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "6934:489:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 310,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "6953:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6971:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6963:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 311,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6963:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6963:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6953:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6975:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6945:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6945:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "6945:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "7034:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7055:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7047:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 321,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7047:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7047:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7034:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7059:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7026:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "7026:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "7131:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "7139:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 332,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "7150:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 329,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "7110:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7110:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "7110:47:0"
											},
											{
												"expression": {
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 335,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "7170:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 337,
														"indexExpression": {
															"id": 336,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "7180:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7170:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 342,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7226:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7247:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 338,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "7190:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 340,
																"indexExpression": {
																	"id": 339,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "7200:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7190:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7208:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 906,
															"src": "7190:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7190:108:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7170:128:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "7170:128:0"
											},
											{
												"expression": {
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 347,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "7309:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 349,
														"indexExpression": {
															"id": 348,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "7319:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7309:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 354,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7357:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 350,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "7332:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 352,
																"indexExpression": {
																	"id": 351,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "7342:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7332:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7353:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "7332:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7332:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7309:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "7309:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 359,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "7389:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "7397:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 361,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "7408:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 358,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "7380:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7380:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "EmitStatement",
												"src": "7375:40:0"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "6331:476:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6822:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6850:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "6842:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6875:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "6867:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6903:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "6895:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6831:85:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6934:0:0"
									},
									"scope": 544,
									"src": "6813:610:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "7770:313:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 374,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "7789:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7800:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 375,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7800:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7800:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7789:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7812:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7781:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7781:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "7781:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7888:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7880:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7880:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7880:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "7892:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "7901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "7859:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "7859:49:0"
											},
											{
												"expression": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "7921:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 395,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "7953:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 393,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "7936:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7949:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "7936:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7936:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7921:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "7921:39:0"
											},
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 399,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "7971:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 401,
														"indexExpression": {
															"id": 400,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "7981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7971:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 406,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "8015:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 402,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "7992:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 404,
																"indexExpression": {
																	"id": 403,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "8002:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7992:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8011:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "7992:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7992:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7971:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "7971:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8055:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8047:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 411,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8047:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8047:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "8059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "8068:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 410,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "8038:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8038:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "EmitStatement",
												"src": "8033:42:0"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "7431:268:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7714:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7728:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "7720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7745:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "7737:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7719:33:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7770:0:0"
									},
									"scope": 544,
									"src": "7705:378:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "8481:390:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 429,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "8500:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8519:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8511:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 430,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8511:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8511:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8500:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8523:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8492:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "8492:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "8593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8610:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 440,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8602:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8602:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "8614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "8572:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8572:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "8572:49:0"
											},
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 447,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "8634:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 449,
														"indexExpression": {
															"id": 448,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "8644:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8634:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 454,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "8692:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8713:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 450,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "8655:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 452,
																"indexExpression": {
																	"id": 451,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "8665:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8655:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8674:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 906,
															"src": "8655:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8655:105:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8634:126:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "8634:126:0"
											},
											{
												"expression": {
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 459,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "8771:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 462,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "8803:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 460,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "8786:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8799:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 836,
															"src": "8786:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8786:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8771:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "8771:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 467,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "8835:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8852:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 468,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8844:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8844:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "8856:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 466,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "8826:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8826:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "EmitStatement",
												"src": "8821:42:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "8091:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8425:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8439:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "8431:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8456:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "8448:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8430:33:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8481:0:0"
									},
									"scope": 544,
									"src": "8416:455:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "9426:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "9445:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9462:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9454:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 488,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9454:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9454:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9445:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9466:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9437:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9437:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "9437:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "9524:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9543:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9535:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 498,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9535:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9535:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9524:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9547:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9516:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "9516:68:0"
											},
											{
												"expression": {
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 506,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "9597:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 509,
															"indexExpression": {
																"id": 507,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "9609:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9597:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 510,
														"indexExpression": {
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "9616:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9597:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 511,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "9627:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9597:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "9597:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 515,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "9658:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "9665:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "9674:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "9649:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9649:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "EmitStatement",
												"src": "9644:37:0"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "8879:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9318:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9345:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "9337:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "9361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9395:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "9387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9326:82:0"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9426:0:0"
									},
									"scope": 544,
									"src": "9309:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "10079:40:0",
										"statements": [
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 527,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "10090:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 528,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "10102:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10090:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "10090:21:0"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "9697:318:0",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nameLocation": "10030:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "10051:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "10045:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 523,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10045:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10044:17:0"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10079:0:0"
									},
									"scope": 544,
									"src": "10021:98:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "10845:2:0",
										"statements": []
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "10127:589:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10731:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10770:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "10762:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10793:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "10785:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10814:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "10806:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10751:76:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10845:0:0"
									},
									"scope": 544,
									"src": "10722:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 545,
							"src": "278:10572:0",
							"usedErrors": []
						}
					],
					"src": "35:10815:0"
				},
				"id": 0
			},
			"task1/interface.sol": {
				"ast": {
					"absolutePath": "task1/interface.sol",
					"exportedSymbols": {
						"IBEP20": [
							645
						]
					},
					"id": 646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 546,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 645,
							"linearizedBaseContracts": [
								645
							],
							"name": "IBEP20",
							"nameLocation": "72:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "86:68:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "169:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:1"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "206:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:1"
									},
									"scope": 645,
									"src": "160:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "223:53:1",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "291:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "325:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 555,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:7:1"
									},
									"scope": 645,
									"src": "282:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "340:51:1",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "406:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:1"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "438:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:15:1"
									},
									"scope": 645,
									"src": "397:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "461:49:1",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "525:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:1"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "555:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 567,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:1"
									},
									"scope": 645,
									"src": "516:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "578:54:1",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "647:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:1"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "681:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:9:1"
									},
									"scope": 645,
									"src": "638:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "698:74:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "787:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "805:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "797:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:17:1"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "837:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:9:1"
									},
									"scope": 645,
									"src": "778:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "854:215:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1084:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1101:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1093:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1120:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1112:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:35:1"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1146:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:6:1"
									},
									"scope": 645,
									"src": "1075:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "1160:270:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1445:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1463:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1455:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1479:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1471:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:33:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1511:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:1"
									},
									"scope": 645,
									"src": "1436:84:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1528:655:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2198:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2206:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:33:1"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:6:1"
									},
									"scope": 645,
									"src": "2189:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "2271:304:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2590:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2611:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2603:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2627:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2619:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2638:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:51:1"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2672:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2672:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:6:1"
									},
									"scope": 645,
									"src": "2581:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "2686:163:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 635,
									"name": "Transfer",
									"nameLocation": "2861:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2886:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "2870:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2908:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "2892:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "2912:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:57:1"
									},
									"src": "2855:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "2935:151:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 644,
									"name": "Approval",
									"nameLocation": "3098:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "3107:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3146:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "3130:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3163:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "3155:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:63:1"
									},
									"src": "3092:78:1"
								}
							],
							"scope": 646,
							"src": "62:3111:1",
							"usedErrors": []
						}
					],
					"src": "35:3138:1"
				},
				"id": 1
			},
			"task1/utils.sol": {
				"ast": {
					"absolutePath": "task1/utils.sol",
					"exportedSymbols": {
						"Address": [
							1159
						],
						"Context": [
							1392
						],
						"IBEP20": [
							645
						],
						"Ownable": [
							1494
						],
						"SafeBEP20": [
							1373
						],
						"SafeMath": [
							957
						]
					},
					"id": 1495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 647,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"absolutePath": "task1/interface.sol",
							"file": "./interface.sol",
							"id": 648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 646,
							"src": "62:25:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 957,
							"linearizedBaseContracts": [
								957
							],
							"name": "SafeMath",
							"nameLocation": "99:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "357:146:2",
										"statements": [
											{
												"id": 678,
												"nodeType": "UncheckedBlock",
												"src": "368:128:2",
												"statements": [
													{
														"assignments": [
															661
														],
														"declarations": [
															{
																"constant": false,
																"id": 661,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "401:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 678,
																"src": "393:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 660,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "393:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 665,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 662,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "405:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 663,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "409:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "393:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 666,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "429:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 667,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "433:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 673,
														"nodeType": "IfStatement",
														"src": "425:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "444:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "451:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 671,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "443:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 659,
															"id": 672,
															"nodeType": "Return",
															"src": "436:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "476:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 675,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "482:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 676,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "475:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 659,
														"id": 677,
														"nodeType": "Return",
														"src": "468:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "115:135:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "265:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "290:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "282:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "310:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "302:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:47:2"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "348:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:15:2"
									},
									"scope": 957,
									"src": "256:247:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "757:118:2",
										"statements": [
											{
												"id": 706,
												"nodeType": "UncheckedBlock",
												"src": "768:100:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 692,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "797:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 693,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "801:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "797:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 699,
														"nodeType": "IfStatement",
														"src": "793:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "812:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "819:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "811:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 691,
															"id": 698,
															"nodeType": "Return",
															"src": "804:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "844:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 701,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "850:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 702,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "854:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "850:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 704,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "843:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 691,
														"id": 705,
														"nodeType": "Return",
														"src": "836:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "511:139:2",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "665:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "690:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "682:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "710:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "702:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:47:2"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "742:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "742:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "748:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:15:2"
									},
									"scope": 957,
									"src": "656:219:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "1131:427:2",
										"statements": [
											{
												"id": 748,
												"nodeType": "UncheckedBlock",
												"src": "1142:409:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 720,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "1404:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1409:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1404:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 727,
														"nodeType": "IfStatement",
														"src": "1400:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1420:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1426:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1419:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 719,
															"id": 726,
															"nodeType": "Return",
															"src": "1412:16:2"
														}
													},
													{
														"assignments": [
															729
														],
														"declarations": [
															{
																"constant": false,
																"id": 729,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1451:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 748,
																"src": "1443:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 728,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1443:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 733,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 730,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "1455:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 731,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "1459:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1455:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1443:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 734,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "1479:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 735,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "1483:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1479:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 737,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "1488:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1479:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 743,
														"nodeType": "IfStatement",
														"src": "1475:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1499:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1506:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 741,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1498:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 719,
															"id": 742,
															"nodeType": "Return",
															"src": "1491:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1531:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 745,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "1537:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 746,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1530:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 719,
														"id": 747,
														"nodeType": "Return",
														"src": "1523:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "883:141:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1039:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1064:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1056:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1084:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1076:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:47:2"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1116:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1116:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1122:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:15:2"
									},
									"scope": 957,
									"src": "1030:528:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "1815:119:2",
										"statements": [
											{
												"id": 776,
												"nodeType": "UncheckedBlock",
												"src": "1826:101:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 762,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "1855:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1860:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1855:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 769,
														"nodeType": "IfStatement",
														"src": "1851:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1871:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1878:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 767,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1870:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 761,
															"id": 768,
															"nodeType": "Return",
															"src": "1863:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1903:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 771,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 753,
																		"src": "1909:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 772,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "1913:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1909:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 774,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1902:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 761,
														"id": 775,
														"nodeType": "Return",
														"src": "1895:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "1566:142:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1723:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1748:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1740:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1768:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1760:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1729:47:2"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1800:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1800:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1806:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1799:15:2"
									},
									"scope": 957,
									"src": "1714:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "2201:119:2",
										"statements": [
											{
												"id": 804,
												"nodeType": "UncheckedBlock",
												"src": "2212:101:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 790,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "2241:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2246:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 797,
														"nodeType": "IfStatement",
														"src": "2237:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2257:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2264:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2256:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 789,
															"id": 796,
															"nodeType": "Return",
															"src": "2249:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2289:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 799,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "2295:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 800,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "2299:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2295:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 802,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2288:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 789,
														"id": 803,
														"nodeType": "Return",
														"src": "2281:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "1942:152:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2109:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2134:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2126:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:47:2"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2186:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 785,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2186:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2192:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2192:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2185:15:2"
									},
									"scope": 957,
									"src": "2100:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "2634:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 816,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "2652:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 817,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "2656:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2652:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 815,
												"id": 819,
												"nodeType": "Return",
												"src": "2645:12:2"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "2328:233:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2576:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2588:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2580:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2579:22:2"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2625:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2625:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2624:9:2"
									},
									"scope": 957,
									"src": "2567:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "3015:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 831,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "3033:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 832,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "3037:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3033:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 830,
												"id": 834,
												"nodeType": "Return",
												"src": "3026:12:2"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "2673:269:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2957:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2969:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2961:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2980:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2972:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:22:2"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "3006:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:9:2"
									},
									"scope": 957,
									"src": "2948:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "3372:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "3390:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 847,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "3394:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3390:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 845,
												"id": 849,
												"nodeType": "Return",
												"src": "3383:12:2"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "3054:245:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3314:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3326:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3318:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3337:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3329:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:22:2"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3363:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3363:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3362:9:2"
									},
									"scope": 957,
									"src": "3305:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "3771:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 861,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "3789:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 862,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "3793:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3789:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 860,
												"id": 864,
												"nodeType": "Return",
												"src": "3782:12:2"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "3411:287:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3713:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3725:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3717:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3717:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3736:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3728:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3716:22:2"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3762:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3762:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:9:2"
									},
									"scope": 957,
									"src": "3704:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "4336:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "4354:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 877,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "4358:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4354:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 875,
												"id": 879,
												"nodeType": "Return",
												"src": "4347:12:2"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "3810:453:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4278:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4290:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4282:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4282:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4301:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4293:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4293:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4281:22:2"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4327:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4326:9:2"
									},
									"scope": 957,
									"src": "4269:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "4975:111:2",
										"statements": [
											{
												"id": 904,
												"nodeType": "UncheckedBlock",
												"src": "4986:93:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 894,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "5019:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 895,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "5024:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5019:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 897,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "5027:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 893,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5011:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5011:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 899,
														"nodeType": "ExpressionStatement",
														"src": "5011:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "5062:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "5066:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5062:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 892,
														"id": 903,
														"nodeType": "Return",
														"src": "5055:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "4375:465:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4855:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4877:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4869:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4869:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4897:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4889:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4889:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4923:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4909:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4909:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4858:84:2"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4966:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4966:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4965:9:2"
									},
									"scope": 957,
									"src": "4846:240:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "5713:110:2",
										"statements": [
											{
												"id": 929,
												"nodeType": "UncheckedBlock",
												"src": "5724:92:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 919,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "5757:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5761:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5757:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 922,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "5764:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 918,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5749:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5749:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 924,
														"nodeType": "ExpressionStatement",
														"src": "5749:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 925,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "5799:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 926,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "5803:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 917,
														"id": 928,
														"nodeType": "Return",
														"src": "5792:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "5094:484:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5593:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5615:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "5607:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5607:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5635:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "5627:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5627:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5661:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "5647:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 912,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5647:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5596:84:2"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "5704:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5704:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5703:9:2"
									},
									"scope": 957,
									"src": "5584:239:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "6615:110:2",
										"statements": [
											{
												"id": 954,
												"nodeType": "UncheckedBlock",
												"src": "6626:92:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 944,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "6659:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6663:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6659:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 947,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "6666:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 943,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6651:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6651:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 949,
														"nodeType": "ExpressionStatement",
														"src": "6651:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 950,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "6701:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 951,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "6705:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6701:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 942,
														"id": 953,
														"nodeType": "Return",
														"src": "6694:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "5831:649:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6495:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6517:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "6509:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6509:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6537:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "6529:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6563:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "6549:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 937,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6549:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:84:2"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "6606:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6606:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6605:9:2"
									},
									"scope": 957,
									"src": "6486:239:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1495,
							"src": "91:6637:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 958,
								"nodeType": "StructuredDocumentation",
								"src": "6736:69:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1159,
							"linearizedBaseContracts": [
								1159
							],
							"name": "Address",
							"nameLocation": "6815:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "7483:575:2",
										"statements": [
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "codehash",
														"nameLocation": "7747:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 983,
														"src": "7739:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 966,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7739:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 968,
												"nodeType": "VariableDeclarationStatement",
												"src": "7739:16:2"
											},
											{
												"assignments": [
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "accountHash",
														"nameLocation": "7774:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 983,
														"src": "7766:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 969,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 972,
												"initialValue": {
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7788:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:88:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7931:58:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7946:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "7970:7:2"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "7958:11:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7958:20:2"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "7946:8:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 961,
														"isOffset": false,
														"isSlot": false,
														"src": "7970:7:2",
														"valueSize": 1
													},
													{
														"declaration": 967,
														"isOffset": false,
														"isSlot": false,
														"src": "7946:8:2",
														"valueSize": 1
													}
												],
												"id": 973,
												"nodeType": "InlineAssembly",
												"src": "7922:67:2"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 974,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "8007:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 975,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "8019:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "8007:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 977,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "8034:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "307830",
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8046:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "8034:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8007:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 981,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8006:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 965,
												"id": 982,
												"nodeType": "Return",
												"src": "7999:51:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "6830:581:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "7426:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7445:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "7437:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7437:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7436:17:2"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "7477:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7477:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7476:6:2"
									},
									"scope": 1159,
									"src": "7417:641:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "9064:398:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 995,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9105:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1159",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1159",
																				"typeString": "library Address"
																			}
																		],
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9097:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 993,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9097:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9097:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9111:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "9097:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 998,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "9122:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9097:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9143:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 992,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9075:110:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "9075:110:2"
											},
											{
												"assignments": [
													1004,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9282:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "9277:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1003,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9277:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1011,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9325:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1005,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "9295:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9305:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "9295:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1007,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "9317:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "9295:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9295:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9276:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1013,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "9361:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9383:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9339:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9339:115:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "9339:115:2"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "8066:921:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "9002:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9028:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "9012:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9012:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9047:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "9039:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9011:43:2"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9064:0:2"
									},
									"scope": 1159,
									"src": "8993:469:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "10337:86:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1029,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "10368:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "10376:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10382:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1028,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1035,
															1055
														],
														"referencedDeclaration": 1055,
														"src": "10355:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10355:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1033,
												"nodeType": "Return",
												"src": "10348:67:2"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "9470:747:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "10232:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10263:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "10255:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10255:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10293:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "10280:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10280:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10244:60:2"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "10323:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10323:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10322:14:2"
									},
									"scope": 1159,
									"src": "10223:200:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "10804:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1048,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "10845:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "10853:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10859:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1051,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "10862:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1047,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "10822:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10822:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1046,
												"id": 1053,
												"nodeType": "Return",
												"src": "10815:60:2"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "10431:216:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "10662:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "10685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10685:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10723:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "10710:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1039,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10752:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "10738:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1041,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10738:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10674:97:2"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "10790:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10790:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10789:14:2"
									},
									"scope": 1159,
									"src": "10653:230:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "11405:209:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1068,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "11476:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "11501:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1070,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "11524:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11548:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1067,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1075,
															1108
														],
														"referencedDeclaration": 1108,
														"src": "11436:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11436:170:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1073,
												"nodeType": "Return",
												"src": "11416:190:2"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "10891:361:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "11267:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11307:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "11299:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11299:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11337:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "11324:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11324:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11360:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "11352:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11288:84:2"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "11391:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11391:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11390:14:2"
									},
									"scope": 1159,
									"src": "11258:356:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "12054:212:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1092,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12095:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1159",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1159",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12087:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1090,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12087:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12087:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12101:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12087:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1095,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "12112:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12087:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12132:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1089,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12065:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12065:118:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "12065:118:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "12224:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "12232:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "12238:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1104,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "12245:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1100,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "12201:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12201:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1088,
												"id": 1106,
												"nodeType": "Return",
												"src": "12194:64:2"
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "11622:242:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "11879:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11919:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "11911:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11911:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11949:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "11936:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11936:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11972:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "11964:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12002:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "11988:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1083,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11988:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11900:121:2"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "12040:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1086,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12039:14:2"
									},
									"scope": 1159,
									"src": "11870:396:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "12461:857:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1123,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "12491:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1122,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "12480:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12480:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12500:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12472:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12472:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "12472:60:2"
											},
											{
												"assignments": [
													1129,
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12611:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1157,
														"src": "12606:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1128,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12606:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "12633:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1157,
														"src": "12620:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1130,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12620:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1138,
												"initialValue": {
													"arguments": [
														{
															"id": 1136,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "12690:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1132,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "12647:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12654:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "12647:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1134,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "12666:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12647:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12647:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12605:100:2"
											},
											{
												"condition": {
													"id": 1139,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1129,
													"src": "12720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1155,
													"nodeType": "Block",
													"src": "12779:532:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1143,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "12865:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12876:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "12865:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12885:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12865:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1153,
																"nodeType": "Block",
																"src": "13245:55:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1150,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "13271:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1149,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "13264:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13264:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1152,
																		"nodeType": "ExpressionStatement",
																		"src": "13264:20:2"
																	}
																]
															},
															"id": 1154,
															"nodeType": "IfStatement",
															"src": "12861:439:2",
															"trueBody": {
																"id": 1148,
																"nodeType": "Block",
																"src": "12888:351:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "13076:148:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "13099:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "13128:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "13122:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13122:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "13103:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13172:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "13176:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "13168:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13168:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "13189:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "13161:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13161:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13161:44:2"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [
																			{
																				"declaration": 1131,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13128:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1131,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13176:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 1147,
																		"nodeType": "InlineAssembly",
																		"src": "13067:157:2"
																	}
																]
															}
														}
													]
												},
												"id": 1156,
												"nodeType": "IfStatement",
												"src": "12716:595:2",
												"trueBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "12729:44:2",
													"statements": [
														{
															"expression": {
																"id": 1140,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "12751:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1120,
															"id": 1141,
															"nodeType": "Return",
															"src": "12744:17:2"
														}
													]
												}
											}
										]
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nameLocation": "12283:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12324:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "12316:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12354:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "12341:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12341:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "weiValue",
												"nameLocation": "12377:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "12369:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12369:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12410:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "12396:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12396:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12305:124:2"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "12447:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12446:14:2"
									},
									"scope": 1159,
									"src": "12274:1044:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1495,
							"src": "6807:6514:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeBEP20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1160,
								"nodeType": "StructuredDocumentation",
								"src": "13329:465:2",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1373,
							"linearizedBaseContracts": [
								1373
							],
							"name": "SafeBEP20",
							"nameLocation": "13804:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1163,
									"libraryName": {
										"id": 1161,
										"name": "SafeMath",
										"nameLocations": [
											"13827:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 957,
										"src": "13827:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "13821:27:2",
									"typeName": {
										"id": 1162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13840:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1166,
									"libraryName": {
										"id": 1164,
										"name": "Address",
										"nameLocations": [
											"13860:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1159,
										"src": "13860:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "13854:26:2",
									"typeName": {
										"id": 1165,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13872:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "13960:142:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "14005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$645",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1180,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "14048:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$645",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14054:8:2",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 594,
																		"src": "14048:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14063:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "14048:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1183,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "14073:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1184,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "14077:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14025:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "14029:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "14025:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14025:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$645",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "13971:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$645_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13971:123:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "13971:123:2"
											}
										]
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "13897:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13917:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "13910:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$645",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1168,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1167,
														"name": "IBEP20",
														"nameLocations": [
															"13910:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 645,
														"src": "13910:6:2"
													},
													"referencedDeclaration": 645,
													"src": "13910:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$645",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13932:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "13924:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "13936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13909:41:2"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13960:0:2"
									},
									"scope": 1373,
									"src": "13888:214:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "14243:152:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1202,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "14288:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$645",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1205,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1192,
																			"src": "14331:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$645",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14337:12:2",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 626,
																		"src": "14331:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14350:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "14331:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1208,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "14360:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1209,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "14366:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "14370:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1203,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14308:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "14312:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "14308:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14308:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$645",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1201,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "14254:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$645_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14254:133:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "14254:133:2"
											}
										]
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14119:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14153:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "14146:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$645",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1190,
														"name": "IBEP20",
														"nameLocations": [
															"14146:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 645,
														"src": "14146:6:2"
													},
													"referencedDeclaration": 645,
													"src": "14146:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$645",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "14169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "14192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14221:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "14213:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14213:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14135:98:2"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14243:0:2"
									},
									"scope": 1373,
									"src": "14110:285:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "14774:597:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1227,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "15082:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15091:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "15082:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15081:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1235,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "15122:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1373",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1373",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 1234,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "15114:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1233,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "15114:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1236,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15114:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1237,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1221,
																					"src": "15129:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1231,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1219,
																					"src": "15098:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$645",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 1232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "15104:9:2",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 604,
																				"src": "15098:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15098:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15141:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "15098:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1241,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15097:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15081:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15158:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15059:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15059:166:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "15059:166:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1247,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "15270:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$645",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1250,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "15313:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$645",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15319:7:2",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 614,
																		"src": "15313:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15327:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "15313:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1253,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "15337:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1254,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "15346:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1248,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15290:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "15294:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "15290:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15290:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$645",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1246,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "15236:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$645_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15236:127:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "15236:127:2"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "14403:255:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "14673:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14702:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "14695:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$645",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1218,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1217,
														"name": "IBEP20",
														"nameLocations": [
															"14695:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 645,
														"src": "14695:6:2"
													},
													"referencedDeclaration": 645,
													"src": "14695:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$645",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14726:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "14718:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "14744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14684:80:2"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14774:0:2"
									},
									"scope": 1373,
									"src": "14664:707:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "15499:327:2",
										"statements": [
											{
												"assignments": [
													1270
												],
												"declarations": [
													{
														"constant": false,
														"id": 1270,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "15518:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1295,
														"src": "15510:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15510:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"arguments": [
														{
															"id": 1280,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "15591:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1275,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "15557:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1373",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1373",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15549:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1273,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "15549:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15549:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1277,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1264,
																	"src": "15564:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1271,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "15533:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$645",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15539:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 604,
																"src": "15533:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15533:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15573:3:2",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 821,
														"src": "15533:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15533:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15510:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1284,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "15652:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$645",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1287,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1262,
																			"src": "15713:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$645",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15719:7:2",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 614,
																		"src": "15713:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15727:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "15713:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1290,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1264,
																	"src": "15754:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1291,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "15780:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1285,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15672:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "15676:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "15672:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15672:135:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$645",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1283,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "15618:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$645_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15618:200:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "15618:200:2"
											}
										]
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "15388:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "15420:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$645",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1261,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1260,
														"name": "IBEP20",
														"nameLocations": [
															"15420:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 645,
														"src": "15420:6:2"
													},
													"referencedDeclaration": 645,
													"src": "15420:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$645",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "15443:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15443:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "15469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15469:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15409:80:2"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15499:0:2"
									},
									"scope": 1373,
									"src": "15379:447:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "15954:385:2",
										"statements": [
											{
												"assignments": [
													1307
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "15973:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "15965:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15965:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"arguments": [
														{
															"id": 1317,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "16046:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16066:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1312,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "16012:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1373",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1373",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16004:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1310,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16004:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16004:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1314,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "16019:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1308,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "15988:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$645",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15994:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 604,
																"src": "15988:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15988:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16028:3:2",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 906,
														"src": "15988:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15988:132:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15965:155:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1322,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "16165:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$645",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1325,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "16226:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$645",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16232:7:2",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 614,
																		"src": "16226:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16240:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16226:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1328,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "16267:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1329,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "16293:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1323,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16185:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "16189:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16185:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16185:135:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$645",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1321,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "16131:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$645_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16131:200:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "16131:200:2"
											}
										]
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "15843:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15882:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "15875:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$645",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1297,
														"name": "IBEP20",
														"nameLocations": [
															"15875:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 645,
														"src": "15875:6:2"
													},
													"referencedDeclaration": 645,
													"src": "15875:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$645",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15906:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "15898:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15932:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "15924:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15924:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15864:80:2"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15954:0:2"
									},
									"scope": 1373,
									"src": "15834:505:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "16800:790:2",
										"statements": [
											{
												"assignments": [
													1344
												],
												"declarations": [
													{
														"constant": false,
														"id": 1344,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "17167:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "17154:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1343,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17154:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1353,
												"initialValue": {
													"arguments": [
														{
															"id": 1350,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "17222:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17241:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1347,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "17188:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$645",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$645",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17180:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1345,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17180:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17180:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17195:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1055,
														"src": "17180:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17180:106:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17154:132:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1354,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "17301:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17312:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17301:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17321:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17301:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1370,
												"nodeType": "IfStatement",
												"src": "17297:286:2",
												"trueBody": {
													"id": 1369,
													"nodeType": "Block",
													"src": "17324:259:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1361,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1344,
																				"src": "17474:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17487:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1362,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "17487:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1364,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "17486:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1359,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "17463:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "17467:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "17463:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17463:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17512:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1358,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "17437:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17437:134:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1368,
															"nodeType": "ExpressionStatement",
															"src": "17437:134:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "16347:377:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "16739:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16766:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "16759:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$645",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1336,
														"name": "IBEP20",
														"nameLocations": [
															"16759:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 645,
														"src": "16759:6:2"
													},
													"referencedDeclaration": 645,
													"src": "16759:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$645",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16786:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "16773:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16773:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16758:33:2"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16800:0:2"
									},
									"scope": 1373,
									"src": "16730:860:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1495,
							"src": "13796:3797:2",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1392,
							"linearizedBaseContracts": [
								1392
							],
							"name": "Context",
							"nameLocation": "17631:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "17708:36:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1378,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "17726:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17730:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "17726:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1377,
												"id": 1380,
												"nodeType": "Return",
												"src": "17719:17:2"
											}
										]
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "17655:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17665:2:2"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "17699:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17698:9:2"
									},
									"scope": 1392,
									"src": "17646:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "17819:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1387,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "17837:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17841:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "17837:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1386,
												"id": 1389,
												"nodeType": "Return",
												"src": "17830:15:2"
											}
										]
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "17761:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17769:2:2"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "17803:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17803:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17802:16:2"
									},
									"scope": 1392,
									"src": "17752:101:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1495,
							"src": "17613:243:2",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1393,
										"name": "Context",
										"nameLocations": [
											"17905:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1392,
										"src": "17905:7:2"
									},
									"id": 1394,
									"nodeType": "InheritanceSpecifier",
									"src": "17905:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1494,
							"linearizedBaseContracts": [
								1494,
								1392
							],
							"name": "Ownable",
							"nameLocation": "17894:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1396,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "17936:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "17920:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1395,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "17920:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1402,
									"name": "OwnershipTransferred",
									"nameLocation": "17957:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "18004:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "17988:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "18044:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "18028:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18028:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17977:82:2"
									},
									"src": "17951:109:2"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "18181:40:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18210:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18202:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1407,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18202:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18202:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1406,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "18192:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18192:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "18192:21:2"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "18068:93:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1414,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18178:2:2"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18181:0:2"
									},
									"scope": 1494,
									"src": "18167:54:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "18357:32:2",
										"statements": [
											{
												"expression": {
													"id": 1420,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1396,
													"src": "18375:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1421,
												"nodeType": "Return",
												"src": "18368:13:2"
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "18229:67:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "18311:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18316:2:2"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "18348:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18348:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18347:9:2"
									},
									"scope": 1494,
									"src": "18302:87:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "18503:99:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1427,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "18522:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18522:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1429,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "18533:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18533:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18522:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18547:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18514:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18514:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "18514:68:2"
											},
											{
												"id": 1435,
												"nodeType": "PlaceholderStatement",
												"src": "18593:1:2"
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "18397:79:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1437,
									"name": "onlyOwner",
									"nameLocation": "18491:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18500:2:2"
									},
									"src": "18482:120:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "19007:40:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19036:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19028:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1444,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19028:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19028:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1443,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "19018:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19018:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "19018:21:2"
											}
										]
									},
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "18610:337:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1441,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1440,
												"name": "onlyOwner",
												"nameLocations": [
													"18997:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1437,
												"src": "18997:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "18997:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "18962:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18979:2:2"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19007:0:2"
									},
									"scope": 1494,
									"src": "18953:94:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "19272:159:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1460,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "19305:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19325:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19317:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1461,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19317:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19317:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19305:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19342:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19283:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19283:110:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "19283:110:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1470,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "19414:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1469,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "19404:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19404:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "19404:19:2"
											}
										]
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "19055:141:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1457,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1456,
												"name": "onlyOwner",
												"nameLocations": [
													"19262:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1437,
												"src": "19262:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "19262:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "19211:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19237:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "19229:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19229:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19228:18:2"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19272:0:2"
									},
									"scope": 1494,
									"src": "19202:229:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "19484:128:2",
										"statements": [
											{
												"assignments": [
													1480
												],
												"declarations": [
													{
														"constant": false,
														"id": 1480,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "19503:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "19495:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1479,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19495:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1482,
												"initialValue": {
													"id": 1481,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1396,
													"src": "19514:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19495:25:2"
											},
											{
												"expression": {
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1483,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "19531:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1484,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "19540:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19531:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "19531:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1488,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "19585:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1489,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "19595:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1487,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "19564:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19564:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "EmitStatement",
												"src": "19559:45:2"
											}
										]
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "19448:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19466:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "19458:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19458:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19457:18:2"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19484:0:2"
									},
									"scope": 1494,
									"src": "19439:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1495,
							"src": "17876:1739:2",
							"usedErrors": []
						}
					],
					"src": "35:19582:2"
				},
				"id": 2
			}
		}
	}
}